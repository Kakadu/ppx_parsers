
  val nullValue = "null".toCharArray
  val trueValue = "true".toCharArray
  val falseValue = "false".toCharArray
  val closeBracket = "}".toCharArray
  val closeSBracket = "]".toCharArray
  val comma = ",".toCharArray
  val points = ":".toCharArray

  object JSonImpl2 {
    import fastparsers.framework.implementations.FastParsersCharArray._

    val jsonparser = FastParsersCharArray{
      def x : Parser[Any] = whitespaces ~> (whitespaces | nullValue | nullValue )

      def value:Parser[Any] = whitespaces ~> (obj | arr | stringLit | decimalNumber | nullValue | trueValue | falseValue)
      def obj:Parser[Any] = '{' ~> repsep(member,comma) <~ closeBracket
      def arr:Parser[Any] = '[' ~> repsep(value,comma) <~ closeSBracket
      def member:Parser[Any] = stringLit ~ (lit(points) ~> value)
    }
  }


[info] Compiling 1 Scala source to /home/kakadu/prog/ocaml/ppx_parsers/scala/hello1/target/scala-2.11/classes...
performing macro expansion fastparsers.framework.implementations.FastParsersCharArray.FastParsersCharArray({
  def x: fastparsers.parsers.Parser[Any] = fastparsers.framework.implementations.FastParsersCharArray.baseParsers[InputWindow[Array[Char]]](FastParsersCharArray.whitespaces).~>[Object](FastParsersCharArray.baseParsers[Object](FastParsersCharArray.baseParsers[InputWindow[Array[Char]]](FastParsersCharArray.whitespaces).|[Object](FastParsersCharArray.lit(Hw.this.nullValue))).|[Object](FastParsersCharArray.lit(Hw.this.nullValue)));
  def value: fastparsers.parsers.Parser[Any] = FastParsersCharArray.baseParsers[InputWindow[Array[Char]]](FastParsersCharArray.whitespaces).~>[Any](FastParsersCharArray.baseParsers[Any](FastParsersCharArray.baseParsers[Any](FastParsersCharArray.baseParsers[Any](FastParsersCharArray.baseParsers[Any](FastParsersCharArray.baseParsers[Any](FastParsersCharArray.baseParsers[Any](obj).|[Any](arr)).|[Any](FastParsersCharArray.stringLit)).|[Any](FastParsersCharArray.decimalNumber)).|[Any](FastParsersCharArray.lit(Hw.this.nullValue))).|[Any](FastParsersCharArray.lit(Hw.this.trueValue))).|[Any](FastParsersCharArray.lit(Hw.this.falseValue)));
  def obj: fastparsers.parsers.Parser[Any] = FastParsersCharArray.baseParsers[List[Any]](FastParsersCharArray.elemParser('{').~>[List[Any]](FastParsersCharArray.repsep[Any, Array[Char]](member, FastParsersCharArray.lit(Hw.this.comma)))).<~[Array[Char]](FastParsersCharArray.lit(Hw.this.closeBracket));
  def arr: fastparsers.parsers.Parser[Any] = FastParsersCharArray.baseParsers[List[Any]](FastParsersCharArray.elemParser('[').~>[List[Any]](FastParsersCharArray.repsep[Any, Array[Char]](value, FastParsersCharArray.lit(Hw.this.comma)))).<~[Array[Char]](FastParsersCharArray.lit(Hw.this.closeSBracket));
  def member: fastparsers.parsers.Parser[Any] = FastParsersCharArray.baseParsers[InputWindow[Array[Char]]](FastParsersCharArray.stringLit).~[Any](FastParsersCharArray.baseParsers[Array[Char]](FastParsersCharArray.lit(Hw.this.points)).~>[Any](value));
  ()
}) at source-/home/kakadu/prog/ocaml/ppx_parsers/scala/hello1/src/main/scala/hw.scala,line-33,offset=999
{
  class fresh$macro$346 extends FinalFastParserImpl {
    import scala.collection.mutable.ListBuffer;
    import scala.reflect.runtime.universe._;
    @new scala.annotation.compileTimeOnly("can\'t be used outside of FastParser") def value: fastparsers.parsers.Parser[Any] = ???;
    @new scala.annotation.compileTimeOnly("can\'t be used outside of FastParser") def obj: fastparsers.parsers.Parser[Any] = ???;
    @new scala.annotation.compileTimeOnly("can\'t be used outside of FastParser") def arr: fastparsers.parsers.Parser[Any] = ???;
    @new scala.annotation.compileTimeOnly("can\'t be used outside of FastParser") def x: fastparsers.parsers.Parser[Any] = ???;
    @new scala.annotation.compileTimeOnly("can\'t be used outside of FastParser") def member: fastparsers.parsers.Parser[Any] = ???;

    // def member:Parser[Any] = stringLit ~ (lit(points) ~> value)
    def member(input$macro$1: Array[Char], fresh$macro$6: Int = 0): ParseResult[Any, String] = {
      var error = " ";
      {
        var inputpos$macro$2 = fresh$macro$6;
        val inputsize$macro$3 = input$macro$1.size; // size of original stream
        {
          val inputpositioned$macro$4 = new fastparsers.tools.ToPosition.IndexedCharSeqToPosition(input$macro$1);
          {
            var success$macro$5 = false;
            var fresh$macro$9: CharArrayStruct = null;
            var fresh$macro$16: Any = null;
            var fresh$macro$18: Any = null;
            var fresh$macro$20: Any = null;
            var fresh$macro$22: Any = null;
            var fresh$macro$24: Any = null;
            var fresh$macro$26: Any = null;
            var fresh$macro$30: List[Any] = null;
            var fresh$macro$36: Array[Char] = null;
            var fresh$macro$39: Any = null;
            var fresh$macro$44: Any = null;
            var fresh$macro$47: List[Any] = null;
            var fresh$macro$53: Array[Char] = null;
            var fresh$macro$56: Any = null;
            var fresh$macro$61: Any = null;
            var fresh$macro$64: CharArrayStruct = null;
            var fresh$macro$67: CharArrayStruct = null;
            var fresh$macro$73: Array[Char] = null;
            var fresh$macro$78: Array[Char] = null;
            var fresh$macro$83: Array[Char] = null;
            var fresh$macro$84: Any = null;
            var fresh$macro$85: scala.Tuple2[CharArrayStruct, Any] = null;
            {
              {
                val fresh$macro$8 = inputpos$macro$2;
                {
                  // skipping whitespace using inputpos$macro$2
                  while$2(){
                    if((inputpos$macro$2 < inputsize$macro$3) &&
                       (input$macro$1(inputpos$macro$2) == ' ') ||
                       (input$macro$1(inputpos$macro$2) == '\t') ||
                       (input$macro$1(inputpos$macro$2) == '\n') ||
                       (input$macro$1(inputpos$macro$2) == '\r'))
                      {
                        inputpos$macro$2 = inputpos$macro$2++;
                        while$2()
                      }
                    else
                      ()
                  };
                  val fresh$macro$7 = inputpos$macro$2;
                  if ( (inputpos$macro$2 < inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == '\"') )
                    {
                      inputpos$macro$2++;
                      while$1() {
                        if (inputpos$macro$2 < inputsize$macro$3  && (input$macro$1(inputpos$macro$2) != '\"'))
                          {
                            {
                              if (input$macro$1(inputpos$macro$2) == '\\')
                                inputpos$macro$2++
                              else
                                ();
                              inputpos$macro$2++;
                            };
                            while$1()
                          }
                        else
                          ()
                      };
                      if (inputpos$macro$2 < inputsize$macro$3) {
                          success$macro$5 = true; // stringLit parsed
                          inputpos$macro$2++;
                          fresh$macro$9 = new CharArrayStruct(input$macro$1, fresh$macro$7, inputpos$macro$2)
                        }
                      else
                        { // we have gone over the end of the stream
                          success$macro$5 = false;
                          ();
                          inputpos$macro$2 = fresh$macro$8
                        }
                    }
                  else
                    {
                      success$macro$5 = false; // we can't parse stringLit: no quote
                      ();
                      inputpos$macro$2 = fresh$macro$8
                    }
                }
              };
              if (success$macro$5)
                { // when stringLit is parsed
                  {
                    {
                      val fresh$macro$13 = inputpos$macro$2;
                      {
                        var fresh$macro$12 = 0;
                        val fresh$macro$11 = Hw.this.points.length;
                        while$4(){
                          // skipping whitespace
                          if ( (inputpos$macro$2 < inputsize$macro$3) &&
                               (input$macro$1(inputpos$macro$2) == ' ') ||
                               (input$macro$1(inputpos$macro$2) == '\t') ||
                               (input$macro$1(inputpos$macro$2) == '\n') ||
                               (input$macro$1(inputpos$macro$2) == '\r'))
                            {
                              inputpos$macro$2 = inputpos$macro$2.$plus(1);
                              while$4()
                            }
                          else
                            ()
                        };
                        // trying to parse ":" from position inputpos$macro$2
                        while$3(){
                          if ( (inputpos$macro$2 < inputsize$macro$3) &&
                               (fresh$macro$12 < fresh$macro$11) &&
                               (input$macro$1(inputpos$macro$2) == (Hw.this.points.charAt(fresh$macro$12)) ) )
                            {
                              {
                                fresh$macro$12++
                                inputpos$macro$2++
                              };
                              while$3()
                            }
                        };
                        if (fresh$macro$12 == fresh$macro$11)
                          {
                            success$macro$5 = true;
                          }
                        else
                          {
                            success$macro$5 = false;
                            ();
                            inputpos$macro$2 = fresh$macro$13
                          }
                      }
                    };
                    if (success$macro$5)
                      {
                        {
                          {
                            val fresh$macro$14 = inputpos$macro$2;
                            while$5(){
                              if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                {
                                  inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                  while$5()
                                }
                              else
                                ()
                            };
                            ();
                            success$macro$5 = true
                          };
                          if (success$macro$5)
                            {
                              val fresh$macro$17 = inputpos$macro$2;
                              {
                                {
                                  val fresh$macro$19 = inputpos$macro$2;
                                  {
                                    {
                                      val fresh$macro$21 = inputpos$macro$2;
                                      {
                                        {
                                          val fresh$macro$23 = inputpos$macro$2;
                                          {
                                            {
                                              val fresh$macro$25 = inputpos$macro$2;
                                              {
                                                {
                                                  val fresh$macro$27 = inputpos$macro$2;
                                                  {
                                                    {
                                                      {
                                                        {
                                                          if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == ('{')))
                                                            {
                                                              ();
                                                              inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                              success$macro$5 = true
                                                            }
                                                          else
                                                            {
                                                              success$macro$5 = false;
                                                              ()
                                                            };
                                                          if (success$macro$5)
                                                            {
                                                              var fresh$macro$28 = true;
                                                              val fresh$macro$29 = new ListBuffer[Any]();
                                                              while$8(){
                                                                if (fresh$macro$28)
                                                                  {
                                                                    {
                                                                      val fresh$macro$37 = inputpos$macro$2;
                                                                      {
                                                                        {
                                                                          val fresh$macro$38 = member(input$macro$1, inputpos$macro$2);
                                                                          success$macro$5 = fresh$macro$38.success;
                                                                          if (success$macro$5)
                                                                            {
                                                                              inputpos$macro$2 = fresh$macro$38.inputPos;
                                                                              fresh$macro$39 = fresh$macro$38.result
                                                                            }
                                                                          else
                                                                            error = fresh$macro$38.error
                                                                        };
                                                                        if (success$macro$5)
                                                                          {
                                                                            fresh$macro$29.$plus$eq(fresh$macro$39);
                                                                            {
                                                                              val fresh$macro$31 = inputpos$macro$2;
                                                                              {
                                                                                {
                                                                                  val fresh$macro$35 = inputpos$macro$2;
                                                                                  {
                                                                                    var fresh$macro$34 = 0;
                                                                                    val fresh$macro$33 = Hw.this.comma.length;
                                                                                    while$7(){
                                                                                      if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                                                        {
                                                                                          inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                                          while$7()
                                                                                        }
                                                                                      else
                                                                                        ()
                                                                                    };
                                                                                    while$6(){
                                                                                      if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(fresh$macro$34 < (fresh$macro$33)).$amp$amp(input$macro$1(inputpos$macro$2) == (Hw.this.comma.charAt(fresh$macro$34))))
                                                                                        {
                                                                                          {
                                                                                            fresh$macro$34 = fresh$macro$34.$plus(1);
                                                                                            inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                                                          };
                                                                                          while$6()
                                                                                        }
                                                                                      else
                                                                                        ()
                                                                                    };
                                                                                    if (fresh$macro$34 == (fresh$macro$33))
                                                                                      {
                                                                                        success$macro$5 = true;
                                                                                        fresh$macro$36 = Hw.this.comma
                                                                                      }
                                                                                    else
                                                                                      {
                                                                                        success$macro$5 = false;
                                                                                        ();
                                                                                        inputpos$macro$2 = fresh$macro$35
                                                                                      }
                                                                                  }
                                                                                };
                                                                                if (success$macro$5.unary_$bang)
                                                                                  {
                                                                                    fresh$macro$28 = false;
                                                                                    inputpos$macro$2 = fresh$macro$31
                                                                                  }
                                                                                else
                                                                                  ()
                                                                              }
                                                                            }
                                                                          }
                                                                        else
                                                                          {
                                                                            fresh$macro$28 = false;
                                                                            inputpos$macro$2 = fresh$macro$37
                                                                          }
                                                                      }
                                                                    };
                                                                    while$8()
                                                                  }
                                                                else
                                                                  ()
                                                              };
                                                              {
                                                                fresh$macro$30 = fresh$macro$29.toList;
                                                                success$macro$5 = true
                                                              }
                                                            }
                                                          else
                                                            ()
                                                        };
                                                        if (success$macro$5)
                                                          {
                                                            val fresh$macro$43 = inputpos$macro$2;
                                                            {
                                                              var fresh$macro$42 = 0;
                                                              val fresh$macro$41 = Hw.this.closeBracket.length;
                                                              while$10(){
                                                                if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                                  {
                                                                    inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                    while$10()
                                                                  }
                                                                else
                                                                  ()
                                                              };
                                                              while$9(){
                                                                if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(fresh$macro$42 < (fresh$macro$41)).$amp$amp(input$macro$1(inputpos$macro$2) == (Hw.this.closeBracket.charAt(fresh$macro$42))))
                                                                  {
                                                                    {
                                                                      fresh$macro$42 = fresh$macro$42.$plus(1);
                                                                      inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                                    };
                                                                    while$9()
                                                                  }
                                                                else
                                                                  ()
                                                              };
                                                              if (fresh$macro$42 == (fresh$macro$41))
                                                                {
                                                                  success$macro$5 = true;
                                                                  ()
                                                                }
                                                              else
                                                                {
                                                                  success$macro$5 = false;
                                                                  ();
                                                                  inputpos$macro$2 = fresh$macro$43
                                                                }
                                                            }
                                                          }
                                                        else
                                                          ()
                                                      };
                                                      fresh$macro$44 = fresh$macro$30
                                                    };
                                                    if (success$macro$5.unary_$bang)
                                                      {
                                                        inputpos$macro$2 = fresh$macro$27;
                                                        {
                                                          {
                                                            {
                                                              if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == ('[')))
                                                                {
                                                                  ();
                                                                  inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                  success$macro$5 = true
                                                                }
                                                              else
                                                                {
                                                                  success$macro$5 = false;
                                                                  ()
                                                                };
                                                              if (success$macro$5)
                                                                {
                                                                  var fresh$macro$45 = true;
                                                                  val fresh$macro$46 = new ListBuffer[Any]();
                                                                  while$13(){
                                                                    if (fresh$macro$45)
                                                                      {
                                                                        {
                                                                          val fresh$macro$54 = inputpos$macro$2;
                                                                          {
                                                                            {
                                                                              val fresh$macro$55 = value(input$macro$1, inputpos$macro$2);
                                                                              success$macro$5 = fresh$macro$55.success;
                                                                              if (success$macro$5)
                                                                                {
                                                                                  inputpos$macro$2 = fresh$macro$55.inputPos;
                                                                                  fresh$macro$56 = fresh$macro$55.result
                                                                                }
                                                                              else
                                                                                error = fresh$macro$55.error
                                                                            };
                                                                            if (success$macro$5)
                                                                              {
                                                                                fresh$macro$46.$plus$eq(fresh$macro$56);
                                                                                {
                                                                                  val fresh$macro$48 = inputpos$macro$2;
                                                                                  {
                                                                                    {
                                                                                      val fresh$macro$52 = inputpos$macro$2;
                                                                                      {
                                                                                        var fresh$macro$51 = 0;
                                                                                        val fresh$macro$50 = Hw.this.comma.length;
                                                                                        while$12(){
                                                                                          if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                                                            {
                                                                                              inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                                              while$12()
                                                                                            }
                                                                                          else
                                                                                            ()
                                                                                        };
                                                                                        while$11(){
                                                                                          if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(fresh$macro$51 < (fresh$macro$50)).$amp$amp(input$macro$1(inputpos$macro$2) == (Hw.this.comma.charAt(fresh$macro$51))))
                                                                                            {
                                                                                              {
                                                                                                fresh$macro$51 = fresh$macro$51.$plus(1);
                                                                                                inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                                                              };
                                                                                              while$11()
                                                                                            }
                                                                                          else
                                                                                            ()
                                                                                        };
                                                                                        if (fresh$macro$51 == (fresh$macro$50))
                                                                                          {
                                                                                            success$macro$5 = true;
                                                                                            fresh$macro$53 = Hw.this.comma
                                                                                          }
                                                                                        else
                                                                                          {
                                                                                            success$macro$5 = false;
                                                                                            ();
                                                                                            inputpos$macro$2 = fresh$macro$52
                                                                                          }
                                                                                      }
                                                                                    };
                                                                                    if (success$macro$5.unary_$bang)
                                                                                      {
                                                                                        fresh$macro$45 = false;
                                                                                        inputpos$macro$2 = fresh$macro$48
                                                                                      }
                                                                                    else
                                                                                      ()
                                                                                  }
                                                                                }
                                                                              }
                                                                            else
                                                                              {
                                                                                fresh$macro$45 = false;
                                                                                inputpos$macro$2 = fresh$macro$54
                                                                              }
                                                                          }
                                                                        };
                                                                        while$13()
                                                                      }
                                                                    else
                                                                      ()
                                                                  };
                                                                  {
                                                                    fresh$macro$47 = fresh$macro$46.toList;
                                                                    success$macro$5 = true
                                                                  }
                                                                }
                                                              else
                                                                ()
                                                            };
                                                            if (success$macro$5)
                                                              {
                                                                val fresh$macro$60 = inputpos$macro$2;
                                                                {
                                                                  var fresh$macro$59 = 0;
                                                                  val fresh$macro$58 = Hw.this.closeSBracket.length;
                                                                  while$15(){
                                                                    if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                                      {
                                                                        inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                        while$15()
                                                                      }
                                                                    else
                                                                      ()
                                                                  };
                                                                  while$14(){
                                                                    if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(fresh$macro$59 < (fresh$macro$58)).$amp$amp(input$macro$1(inputpos$macro$2) == (Hw.this.closeSBracket.charAt(fresh$macro$59))))
                                                                      {
                                                                        {
                                                                          fresh$macro$59 = fresh$macro$59.$plus(1);
                                                                          inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                                        };
                                                                        while$14()
                                                                      }
                                                                    else
                                                                      ()
                                                                  };
                                                                  if (fresh$macro$59 == (fresh$macro$58))
                                                                    {
                                                                      success$macro$5 = true;
                                                                      ()
                                                                    }
                                                                  else
                                                                    {
                                                                      success$macro$5 = false;
                                                                      ();
                                                                      inputpos$macro$2 = fresh$macro$60
                                                                    }
                                                                }
                                                              }
                                                            else
                                                              ()
                                                          };
                                                          fresh$macro$61 = fresh$macro$47
                                                        };
                                                        if (success$macro$5)
                                                          fresh$macro$26 = fresh$macro$61
                                                        else
                                                          ()
                                                      }
                                                    else
                                                      fresh$macro$26 = fresh$macro$44
                                                  }
                                                };
                                                if (success$macro$5.unary_$bang)
                                                  {
                                                    inputpos$macro$2 = fresh$macro$25;
                                                    {
                                                      val fresh$macro$63 = inputpos$macro$2;
                                                      {
                                                        while$17(){
                                                          if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                            {
                                                              inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                              while$17()
                                                            }
                                                          else
                                                            ()
                                                        };
                                                        val fresh$macro$62 = inputpos$macro$2;
                                                        if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == ('\"')))
                                                          {
                                                            inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                            while$16(){
                                                              if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2).$bang$eq('\"')))
                                                                {
                                                                  {
                                                                    if (input$macro$1(inputpos$macro$2) == ('\\'))
                                                                      inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                                    else
                                                                      ();
                                                                    inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                                  };
                                                                  while$16()
                                                                }
                                                              else
                                                                ()
                                                            };
                                                            if (inputpos$macro$2 < (inputsize$macro$3))
                                                              {
                                                                success$macro$5 = true;
                                                                inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                fresh$macro$64 = new CharArrayStruct(input$macro$1, fresh$macro$62, inputpos$macro$2)
                                                              }
                                                            else
                                                              {
                                                                success$macro$5 = false;
                                                                ();
                                                                inputpos$macro$2 = fresh$macro$63
                                                              }
                                                          }
                                                        else
                                                          {
                                                            success$macro$5 = false;
                                                            ();
                                                            inputpos$macro$2 = fresh$macro$63
                                                          }
                                                      }
                                                    };
                                                    if (success$macro$5)
                                                      fresh$macro$24 = fresh$macro$64
                                                    else
                                                      ()
                                                  }
                                                else
                                                  fresh$macro$24 = fresh$macro$26
                                              }
                                            };
                                            if (success$macro$5.unary_$bang)
                                              {
                                                inputpos$macro$2 = fresh$macro$23;
                                                {
                                                  val fresh$macro$68 = inputpos$macro$2;
                                                  {
                                                    while$21(){
                                                      if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                        {
                                                          inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                          while$21()
                                                        }
                                                      else
                                                        ()
                                                    };
                                                    var fresh$macro$65 = false;
                                                    val fresh$macro$66 = inputpos$macro$2;
                                                    success$macro$5 = false;
                                                    if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == ('-')))
                                                      inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                    else
                                                      ();
                                                    if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2).$greater$eq('0')).$amp$amp(input$macro$1(inputpos$macro$2) < $eq('9')))
                                                      {
                                                        inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                        while$19(){
                                                          if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2).$greater$eq('0')).$amp$amp(input$macro$1(inputpos$macro$2) < $eq('9')))
                                                            {
                                                              inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                              while$19()
                                                            }
                                                          else
                                                            ()
                                                        };
                                                        if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == ('.')))
                                                          {
                                                            inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                            while$18(){
                                                              if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2).$greater$eq('0')).$amp$amp(input$macro$1(inputpos$macro$2) < $eq('9')))
                                                                {
                                                                  inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                  while$18()
                                                                }
                                                              else
                                                                ()
                                                            }
                                                          }
                                                        else
                                                          ();
                                                        success$macro$5 = true;
                                                        fresh$macro$67 = new CharArrayStruct(input$macro$1, fresh$macro$66, inputpos$macro$2)
                                                      }
                                                    else
                                                      if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == ('.')))
                                                        {
                                                          inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                          if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2).$greater$eq('0')).$amp$amp(input$macro$1(inputpos$macro$2) < $eq('9')))
                                                            {
                                                              inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                              while$20(){
                                                                if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2).$greater$eq('0')).$amp$amp(input$macro$1(inputpos$macro$2) < $eq('9')))
                                                                  {
                                                                    inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                    while$20()
                                                                  }
                                                                else
                                                                  ()
                                                              };
                                                              success$macro$5 = true;
                                                              fresh$macro$67 = new CharArrayStruct(input$macro$1, fresh$macro$66, inputpos$macro$2)
                                                            }
                                                          else
                                                            ()
                                                        }
                                                      else
                                                        ()
                                                  }
                                                };
                                                if (success$macro$5)
                                                  fresh$macro$22 = fresh$macro$67
                                                else
                                                  ()
                                              }
                                            else
                                              fresh$macro$22 = fresh$macro$24
                                          }
                                        };
                                        if (success$macro$5.unary_$bang)
                                          {
                                            inputpos$macro$2 = fresh$macro$21;
                                            {
                                              val fresh$macro$72 = inputpos$macro$2;
                                              {
                                                var fresh$macro$71 = 0;
                                                val fresh$macro$70 = Hw.this.nullValue.length;
                                                while$23(){
                                                  if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                    {
                                                      inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                      while$23()
                                                    }
                                                  else
                                                    ()
                                                };
                                                while$22(){
                                                  if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(fresh$macro$71 < (fresh$macro$70)).$amp$amp(input$macro$1(inputpos$macro$2) == (Hw.this.nullValue.charAt(fresh$macro$71))))
                                                    {
                                                      {
                                                        fresh$macro$71 = fresh$macro$71.$plus(1);
                                                        inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                      };
                                                      while$22()
                                                    }
                                                  else
                                                    ()
                                                };
                                                if (fresh$macro$71 == (fresh$macro$70))
                                                  {
                                                    success$macro$5 = true;
                                                    fresh$macro$73 = Hw.this.nullValue
                                                  }
                                                else
                                                  {
                                                    success$macro$5 = false;
                                                    ();
                                                    inputpos$macro$2 = fresh$macro$72
                                                  }
                                              }
                                            };
                                            if (success$macro$5)
                                              fresh$macro$20 = fresh$macro$73
                                            else
                                              ()
                                          }
                                        else
                                          fresh$macro$20 = fresh$macro$22
                                      }
                                    };
                                    if (success$macro$5.unary_$bang)
                                      {
                                        inputpos$macro$2 = fresh$macro$19;
                                        {
                                          val fresh$macro$77 = inputpos$macro$2;
                                          {
                                            var fresh$macro$76 = 0;
                                            val fresh$macro$75 = Hw.this.trueValue.length;
                                            while$25(){
                                              if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                {
                                                  inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                  while$25()
                                                }
                                              else
                                                ()
                                            };
                                            while$24(){
                                              if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(fresh$macro$76 < (fresh$macro$75)).$amp$amp(input$macro$1(inputpos$macro$2) == (Hw.this.trueValue.charAt(fresh$macro$76))))
                                                {
                                                  {
                                                    fresh$macro$76 = fresh$macro$76.$plus(1);
                                                    inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                  };
                                                  while$24()
                                                }
                                              else
                                                ()
                                            };
                                            if (fresh$macro$76 == (fresh$macro$75))
                                              {
                                                success$macro$5 = true;
                                                fresh$macro$78 = Hw.this.trueValue
                                              }
                                            else
                                              {
                                                success$macro$5 = false;
                                                ();
                                                inputpos$macro$2 = fresh$macro$77
                                              }
                                          }
                                        };
                                        if (success$macro$5)
                                          fresh$macro$18 = fresh$macro$78
                                        else
                                          ()
                                      }
                                    else
                                      fresh$macro$18 = fresh$macro$20
                                  }
                                };
                                if (success$macro$5.unary_$bang)
                                  {
                                    inputpos$macro$2 = fresh$macro$17;
                                    {
                                      val fresh$macro$82 = inputpos$macro$2;
                                      {
                                        var fresh$macro$81 = 0;
                                        val fresh$macro$80 = Hw.this.falseValue.length;
                                        while$27(){
                                          if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                            {
                                              inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                              while$27()
                                            }
                                          else
                                            ()
                                        };
                                        while$26(){
                                          if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(fresh$macro$81 < (fresh$macro$80)).$amp$amp(input$macro$1(inputpos$macro$2) == (Hw.this.falseValue.charAt(fresh$macro$81))))
                                            {
                                              {
                                                fresh$macro$81 = fresh$macro$81.$plus(1);
                                                inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                              };
                                              while$26()
                                            }
                                          else
                                            ()
                                        };
                                        if (fresh$macro$81 == (fresh$macro$80))
                                          {
                                            success$macro$5 = true;
                                            fresh$macro$83 = Hw.this.falseValue
                                          }
                                        else
                                          {
                                            success$macro$5 = false;
                                            ();
                                            inputpos$macro$2 = fresh$macro$82
                                          }
                                      }
                                    };
                                    if (success$macro$5)
                                      fresh$macro$16 = fresh$macro$83
                                    else
                                      ()
                                  }
                                else
                                  fresh$macro$16 = fresh$macro$18
                              }
                            }
                          else
                            ()
                        };
                        fresh$macro$84 = fresh$macro$16
                      }
                    else
                      ()
                  };
                  fresh$macro$85 = scala.Tuple2(fresh$macro$9, fresh$macro$84)
                }
              else
                ()
            };
            ParseResult(success$macro$5, error, if (success$macro$5)
              fresh$macro$85
            else
              null, inputpos$macro$2)
          }
        }
      }
    };
    def arr(input$macro$1: Array[Char], fresh$macro$86: Int = 0): ParseResult[Any, String] @fastparsers.framework.saveAST(FastParsersCharArray.baseParsers[List[Any]](FastParsersCharArray.elemParser('[').$tilde$greater[List[Any]](FastParsersCharArray.repsep[Any, Array[Char]](FastParsersCharArray.compound[Any](FastParsersCharArray.baseParsers[InputWindow[Array[Char]]](FastParsersCharArray.whitespaces).$tilde$greater[Any](FastParsersCharArray.baseParsers[Any](FastParsersCharArray.baseParsers[Any](FastParsersCharArray.baseParsers[Any](FastParsersCharArray.baseParsers[Any](FastParsersCharArray.baseParsers[Any](FastParsersCharArray.baseParsers[Any](FastParsersCharArray.compound[Any](FastParsersCharArray.baseParsers[List[Any]](FastParsersCharArray.elemParser('{').$tilde$greater[List[Any]](FastParsersCharArray.repsep[Any, Array[Char]](FastParsersCharArray.compound[Any](FastParsersCharArray.baseParsers[InputWindow[Array[Char]]](FastParsersCharArray.stringLit).$tilde[Any](FastParsersCharArray.baseParsers[Array[Char]](FastParsersCharArray.lit(Hw.this.points)).$tilde$greater[Any](FastParsersCharArray.call[Any]("value")))), FastParsersCharArray.lit(Hw.this.comma)))) < $tilde[Array[Char]](FastParsersCharArray.lit(Hw.this.closeBracket)))).$bar[Any](FastParsersCharArray.call[Any]("arr"))).$bar[Any](FastParsersCharArray.stringLit)).$bar[Any](FastParsersCharArray.decimalNumber)).$bar[Any](FastParsersCharArray.lit(Hw.this.nullValue))).$bar[Any](FastParsersCharArray.lit(Hw.this.trueValue))).$bar[Any](FastParsersCharArray.lit(Hw.this.falseValue)))), FastParsersCharArray.lit(Hw.this.comma)))) < $tilde[Array[Char]](FastParsersCharArray.lit(Hw.this.closeSBracket))) = {
      var error = " ";
      {
        var inputpos$macro$2 = fresh$macro$86;
        val inputsize$macro$3 = input$macro$1.size;
        {
          val inputpositioned$macro$4 = new fastparsers.tools.ToPosition.IndexedCharSeqToPosition(input$macro$1);
          {
            var success$macro$5 = false;
            var fresh$macro$89: List[Any] = null;
            var fresh$macro$95: Array[Char] = null;
            var fresh$macro$99: Any = null;
            var fresh$macro$101: Any = null;
            var fresh$macro$103: Any = null;
            var fresh$macro$105: Any = null;
            var fresh$macro$107: Any = null;
            var fresh$macro$109: Any = null;
            var fresh$macro$113: List[Any] = null;
            var fresh$macro$119: Array[Char] = null;
            var fresh$macro$123: CharArrayStruct = null;
            var fresh$macro$129: Any = null;
            var fresh$macro$130: scala.Tuple2[CharArrayStruct, Any] = null;
            var fresh$macro$131: Any = null;
            var fresh$macro$136: Any = null;
            var fresh$macro$138: Any = null;
            var fresh$macro$141: CharArrayStruct = null;
            var fresh$macro$144: CharArrayStruct = null;
            var fresh$macro$150: Array[Char] = null;
            var fresh$macro$155: Array[Char] = null;
            var fresh$macro$160: Array[Char] = null;
            var fresh$macro$161: Any = null;
            {
              {
                if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == ('[')))
                  {
                    ();
                    inputpos$macro$2 = inputpos$macro$2.$plus(1);
                    success$macro$5 = true
                  }
                else
                  {
                    success$macro$5 = false;
                    ()
                  };
                if (success$macro$5)
                  {
                    var fresh$macro$87 = true;
                    val fresh$macro$88 = new ListBuffer[Any]();
                    while$52(){
                      if (fresh$macro$87)
                        {
                          {
                            val fresh$macro$96 = inputpos$macro$2;
                            {
                              {
                                {
                                  {
                                    val fresh$macro$97 = inputpos$macro$2;
                                    while$30(){
                                      if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                        {
                                          inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                          while$30()
                                        }
                                      else
                                        ()
                                    };
                                    ();
                                    success$macro$5 = true
                                  };
                                  if (success$macro$5)
                                    {
                                      val fresh$macro$100 = inputpos$macro$2;
                                      {
                                        {
                                          val fresh$macro$102 = inputpos$macro$2;
                                          {
                                            {
                                              val fresh$macro$104 = inputpos$macro$2;
                                              {
                                                {
                                                  val fresh$macro$106 = inputpos$macro$2;
                                                  {
                                                    {
                                                      val fresh$macro$108 = inputpos$macro$2;
                                                      {
                                                        {
                                                          val fresh$macro$110 = inputpos$macro$2;
                                                          {
                                                            {
                                                              {
                                                                {
                                                                  if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == ('{')))
                                                                    {
                                                                      ();
                                                                      inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                      success$macro$5 = true
                                                                    }
                                                                  else
                                                                    {
                                                                      success$macro$5 = false;
                                                                      ()
                                                                    };
                                                                  if (success$macro$5)
                                                                    {
                                                                      var fresh$macro$111 = true;
                                                                      val fresh$macro$112 = new ListBuffer[Any]();
                                                                      while$37(){
                                                                        if (fresh$macro$111)
                                                                          {
                                                                            {
                                                                              val fresh$macro$120 = inputpos$macro$2;
                                                                              {
                                                                                {
                                                                                  {
                                                                                    {
                                                                                      val fresh$macro$122 = inputpos$macro$2;
                                                                                      {
                                                                                        while$34(){
                                                                                          if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                                                            {
                                                                                              inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                                              while$34()
                                                                                            }
                                                                                          else
                                                                                            ()
                                                                                        };
                                                                                        val fresh$macro$121 = inputpos$macro$2;
                                                                                        if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == ('\"')))
                                                                                          {
                                                                                            inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                                            while$33(){
                                                                                              if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2).$bang$eq('\"')))
                                                                                                {
                                                                                                  {
                                                                                                    if (input$macro$1(inputpos$macro$2) == ('\\'))
                                                                                                      inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                                                                    else
                                                                                                      ();
                                                                                                    inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                                                                  };
                                                                                                  while$33()
                                                                                                }
                                                                                              else
                                                                                                ()
                                                                                            };
                                                                                            if (inputpos$macro$2 < (inputsize$macro$3))
                                                                                              {
                                                                                                success$macro$5 = true;
                                                                                                inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                                                fresh$macro$123 = new CharArrayStruct(input$macro$1, fresh$macro$121, inputpos$macro$2)
                                                                                              }
                                                                                            else
                                                                                              {
                                                                                                success$macro$5 = false;
                                                                                                ();
                                                                                                inputpos$macro$2 = fresh$macro$122
                                                                                              }
                                                                                          }
                                                                                        else
                                                                                          {
                                                                                            success$macro$5 = false;
                                                                                            ();
                                                                                            inputpos$macro$2 = fresh$macro$122
                                                                                          }
                                                                                      }
                                                                                    };
                                                                                    if (success$macro$5)
                                                                                      {
                                                                                        {
                                                                                          {
                                                                                            val fresh$macro$127 = inputpos$macro$2;
                                                                                            {
                                                                                              var fresh$macro$126 = 0;
                                                                                              val fresh$macro$125 = Hw.this.points.length;
                                                                                              while$36(){
                                                                                                if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                                                                  {
                                                                                                    inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                                                    while$36()
                                                                                                  }
                                                                                                else
                                                                                                  ()
                                                                                              };
                                                                                              while$35(){
                                                                                                if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(fresh$macro$126 < (fresh$macro$125)).$amp$amp(input$macro$1(inputpos$macro$2) == (Hw.this.points.charAt(fresh$macro$126))))
                                                                                                  {
                                                                                                    {
                                                                                                      fresh$macro$126 = fresh$macro$126.$plus(1);
                                                                                                      inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                                                                    };
                                                                                                    while$35()
                                                                                                  }
                                                                                                else
                                                                                                  ()
                                                                                              };
                                                                                              if (fresh$macro$126 == (fresh$macro$125))
                                                                                                {
                                                                                                  success$macro$5 = true;
                                                                                                  ()
                                                                                                }
                                                                                              else
                                                                                                {
                                                                                                  success$macro$5 = false;
                                                                                                  ();
                                                                                                  inputpos$macro$2 = fresh$macro$127
                                                                                                }
                                                                                            }
                                                                                          };
                                                                                          if (success$macro$5)
                                                                                            {
                                                                                              val fresh$macro$128 = value(input$macro$1, inputpos$macro$2);
                                                                                              success$macro$5 = fresh$macro$128.success;
                                                                                              if (success$macro$5)
                                                                                                {
                                                                                                  inputpos$macro$2 = fresh$macro$128.inputPos;
                                                                                                  fresh$macro$129 = fresh$macro$128.result
                                                                                                }
                                                                                              else
                                                                                                error = fresh$macro$128.error
                                                                                            }
                                                                                          else
                                                                                            ()
                                                                                        };
                                                                                        fresh$macro$130 = scala.Tuple2(fresh$macro$123, fresh$macro$129)
                                                                                      }
                                                                                    else
                                                                                      ()
                                                                                  };
                                                                                  fresh$macro$131 = fresh$macro$130
                                                                                };
                                                                                if (success$macro$5)
                                                                                  {
                                                                                    fresh$macro$112.$plus$eq(fresh$macro$131);
                                                                                    {
                                                                                      val fresh$macro$114 = inputpos$macro$2;
                                                                                      {
                                                                                        {
                                                                                          val fresh$macro$118 = inputpos$macro$2;
                                                                                          {
                                                                                            var fresh$macro$117 = 0;
                                                                                            val fresh$macro$116 = Hw.this.comma.length;
                                                                                            while$32(){
                                                                                              if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                                                                {
                                                                                                  inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                                                  while$32()
                                                                                                }
                                                                                              else
                                                                                                ()
                                                                                            };
                                                                                            while$31(){
                                                                                              if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(fresh$macro$117 < (fresh$macro$116)).$amp$amp(input$macro$1(inputpos$macro$2) == (Hw.this.comma.charAt(fresh$macro$117))))
                                                                                                {
                                                                                                  {
                                                                                                    fresh$macro$117 = fresh$macro$117.$plus(1);
                                                                                                    inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                                                                  };
                                                                                                  while$31()
                                                                                                }
                                                                                              else
                                                                                                ()
                                                                                            };
                                                                                            if (fresh$macro$117 == (fresh$macro$116))
                                                                                              {
                                                                                                success$macro$5 = true;
                                                                                                fresh$macro$119 = Hw.this.comma
                                                                                              }
                                                                                            else
                                                                                              {
                                                                                                success$macro$5 = false;
                                                                                                ();
                                                                                                inputpos$macro$2 = fresh$macro$118
                                                                                              }
                                                                                          }
                                                                                        };
                                                                                        if (success$macro$5.unary_$bang)
                                                                                          {
                                                                                            fresh$macro$111 = false;
                                                                                            inputpos$macro$2 = fresh$macro$114
                                                                                          }
                                                                                        else
                                                                                          ()
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                else
                                                                                  {
                                                                                    fresh$macro$111 = false;
                                                                                    inputpos$macro$2 = fresh$macro$120
                                                                                  }
                                                                              }
                                                                            };
                                                                            while$37()
                                                                          }
                                                                        else
                                                                          ()
                                                                      };
                                                                      {
                                                                        fresh$macro$113 = fresh$macro$112.toList;
                                                                        success$macro$5 = true
                                                                      }
                                                                    }
                                                                  else
                                                                    ()
                                                                };
                                                                if (success$macro$5)
                                                                  {
                                                                    val fresh$macro$135 = inputpos$macro$2;
                                                                    {
                                                                      var fresh$macro$134 = 0;
                                                                      val fresh$macro$133 = Hw.this.closeBracket.length;
                                                                      while$39(){
                                                                        if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                                          {
                                                                            inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                            while$39()
                                                                          }
                                                                        else
                                                                          ()
                                                                      };
                                                                      while$38(){
                                                                        if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(fresh$macro$134 < (fresh$macro$133)).$amp$amp(input$macro$1(inputpos$macro$2) == (Hw.this.closeBracket.charAt(fresh$macro$134))))
                                                                          {
                                                                            {
                                                                              fresh$macro$134 = fresh$macro$134.$plus(1);
                                                                              inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                                            };
                                                                            while$38()
                                                                          }
                                                                        else
                                                                          ()
                                                                      };
                                                                      if (fresh$macro$134 == (fresh$macro$133))
                                                                        {
                                                                          success$macro$5 = true;
                                                                          ()
                                                                        }
                                                                      else
                                                                        {
                                                                          success$macro$5 = false;
                                                                          ();
                                                                          inputpos$macro$2 = fresh$macro$135
                                                                        }
                                                                    }
                                                                  }
                                                                else
                                                                  ()
                                                              };
                                                              fresh$macro$136 = fresh$macro$113
                                                            };
                                                            if (success$macro$5.unary_$bang)
                                                              {
                                                                inputpos$macro$2 = fresh$macro$110;
                                                                {
                                                                  val fresh$macro$137 = arr(input$macro$1, inputpos$macro$2);
                                                                  success$macro$5 = fresh$macro$137.success;
                                                                  if (success$macro$5)
                                                                    {
                                                                      inputpos$macro$2 = fresh$macro$137.inputPos;
                                                                      fresh$macro$138 = fresh$macro$137.result
                                                                    }
                                                                  else
                                                                    error = fresh$macro$137.error
                                                                };
                                                                if (success$macro$5)
                                                                  fresh$macro$109 = fresh$macro$138
                                                                else
                                                                  ()
                                                              }
                                                            else
                                                              fresh$macro$109 = fresh$macro$136
                                                          }
                                                        };
                                                        if (success$macro$5.unary_$bang)
                                                          {
                                                            inputpos$macro$2 = fresh$macro$108;
                                                            {
                                                              val fresh$macro$140 = inputpos$macro$2;
                                                              {
                                                                while$41(){
                                                                  if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                                    {
                                                                      inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                      while$41()
                                                                    }
                                                                  else
                                                                    ()
                                                                };
                                                                val fresh$macro$139 = inputpos$macro$2;
                                                                if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == ('\"')))
                                                                  {
                                                                    inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                    while$40(){
                                                                      if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2).$bang$eq('\"')))
                                                                        {
                                                                          {
                                                                            if (input$macro$1(inputpos$macro$2) == ('\\'))
                                                                              inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                                            else
                                                                              ();
                                                                            inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                                          };
                                                                          while$40()
                                                                        }
                                                                      else
                                                                        ()
                                                                    };
                                                                    if (inputpos$macro$2 < (inputsize$macro$3))
                                                                      {
                                                                        success$macro$5 = true;
                                                                        inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                        fresh$macro$141 = new CharArrayStruct(input$macro$1, fresh$macro$139, inputpos$macro$2)
                                                                      }
                                                                    else
                                                                      {
                                                                        success$macro$5 = false;
                                                                        ();
                                                                        inputpos$macro$2 = fresh$macro$140
                                                                      }
                                                                  }
                                                                else
                                                                  {
                                                                    success$macro$5 = false;
                                                                    ();
                                                                    inputpos$macro$2 = fresh$macro$140
                                                                  }
                                                              }
                                                            };
                                                            if (success$macro$5)
                                                              fresh$macro$107 = fresh$macro$141
                                                            else
                                                              ()
                                                          }
                                                        else
                                                          fresh$macro$107 = fresh$macro$109
                                                      }
                                                    };
                                                    if (success$macro$5.unary_$bang)
                                                      {
                                                        inputpos$macro$2 = fresh$macro$106;
                                                        {
                                                          val fresh$macro$145 = inputpos$macro$2;
                                                          {
                                                            while$45(){
                                                              if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                                {
                                                                  inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                  while$45()
                                                                }
                                                              else
                                                                ()
                                                            };
                                                            var fresh$macro$142 = false;
                                                            val fresh$macro$143 = inputpos$macro$2;
                                                            success$macro$5 = false;
                                                            if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == ('-')))
                                                              inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                            else
                                                              ();
                                                            if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2).$greater$eq('0')).$amp$amp(input$macro$1(inputpos$macro$2) < $eq('9')))
                                                              {
                                                                inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                while$43(){
                                                                  if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2).$greater$eq('0')).$amp$amp(input$macro$1(inputpos$macro$2) < $eq('9')))
                                                                    {
                                                                      inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                      while$43()
                                                                    }
                                                                  else
                                                                    ()
                                                                };
                                                                if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == ('.')))
                                                                  {
                                                                    inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                    while$42(){
                                                                      if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2).$greater$eq('0')).$amp$amp(input$macro$1(inputpos$macro$2) < $eq('9')))
                                                                        {
                                                                          inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                          while$42()
                                                                        }
                                                                      else
                                                                        ()
                                                                    }
                                                                  }
                                                                else
                                                                  ();
                                                                success$macro$5 = true;
                                                                fresh$macro$144 = new CharArrayStruct(input$macro$1, fresh$macro$143, inputpos$macro$2)
                                                              }
                                                            else
                                                              if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == ('.')))
                                                                {
                                                                  inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                  if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2).$greater$eq('0')).$amp$amp(input$macro$1(inputpos$macro$2) < $eq('9')))
                                                                    {
                                                                      inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                      while$44(){
                                                                        if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2).$greater$eq('0')).$amp$amp(input$macro$1(inputpos$macro$2) < $eq('9')))
                                                                          {
                                                                            inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                            while$44()
                                                                          }
                                                                        else
                                                                          ()
                                                                      };
                                                                      success$macro$5 = true;
                                                                      fresh$macro$144 = new CharArrayStruct(input$macro$1, fresh$macro$143, inputpos$macro$2)
                                                                    }
                                                                  else
                                                                    ()
                                                                }
                                                              else
                                                                ()
                                                          }
                                                        };
                                                        if (success$macro$5)
                                                          fresh$macro$105 = fresh$macro$144
                                                        else
                                                          ()
                                                      }
                                                    else
                                                      fresh$macro$105 = fresh$macro$107
                                                  }
                                                };
                                                if (success$macro$5.unary_$bang)
                                                  {
                                                    inputpos$macro$2 = fresh$macro$104;
                                                    {
                                                      val fresh$macro$149 = inputpos$macro$2;
                                                      {
                                                        var fresh$macro$148 = 0;
                                                        val fresh$macro$147 = Hw.this.nullValue.length;
                                                        while$47(){
                                                          if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                            {
                                                              inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                              while$47()
                                                            }
                                                          else
                                                            ()
                                                        };
                                                        while$46(){
                                                          if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(fresh$macro$148 < (fresh$macro$147)).$amp$amp(input$macro$1(inputpos$macro$2) == (Hw.this.nullValue.charAt(fresh$macro$148))))
                                                            {
                                                              {
                                                                fresh$macro$148 = fresh$macro$148.$plus(1);
                                                                inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                              };
                                                              while$46()
                                                            }
                                                          else
                                                            ()
                                                        };
                                                        if (fresh$macro$148 == (fresh$macro$147))
                                                          {
                                                            success$macro$5 = true;
                                                            fresh$macro$150 = Hw.this.nullValue
                                                          }
                                                        else
                                                          {
                                                            success$macro$5 = false;
                                                            ();
                                                            inputpos$macro$2 = fresh$macro$149
                                                          }
                                                      }
                                                    };
                                                    if (success$macro$5)
                                                      fresh$macro$103 = fresh$macro$150
                                                    else
                                                      ()
                                                  }
                                                else
                                                  fresh$macro$103 = fresh$macro$105
                                              }
                                            };
                                            if (success$macro$5.unary_$bang)
                                              {
                                                inputpos$macro$2 = fresh$macro$102;
                                                {
                                                  val fresh$macro$154 = inputpos$macro$2;
                                                  {
                                                    var fresh$macro$153 = 0;
                                                    val fresh$macro$152 = Hw.this.trueValue.length;
                                                    while$49(){
                                                      if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                        {
                                                          inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                          while$49()
                                                        }
                                                      else
                                                        ()
                                                    };
                                                    while$48(){
                                                      if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(fresh$macro$153 < (fresh$macro$152)).$amp$amp(input$macro$1(inputpos$macro$2) == (Hw.this.trueValue.charAt(fresh$macro$153))))
                                                        {
                                                          {
                                                            fresh$macro$153 = fresh$macro$153.$plus(1);
                                                            inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                          };
                                                          while$48()
                                                        }
                                                      else
                                                        ()
                                                    };
                                                    if (fresh$macro$153 == (fresh$macro$152))
                                                      {
                                                        success$macro$5 = true;
                                                        fresh$macro$155 = Hw.this.trueValue
                                                      }
                                                    else
                                                      {
                                                        success$macro$5 = false;
                                                        ();
                                                        inputpos$macro$2 = fresh$macro$154
                                                      }
                                                  }
                                                };
                                                if (success$macro$5)
                                                  fresh$macro$101 = fresh$macro$155
                                                else
                                                  ()
                                              }
                                            else
                                              fresh$macro$101 = fresh$macro$103
                                          }
                                        };
                                        if (success$macro$5.unary_$bang)
                                          {
                                            inputpos$macro$2 = fresh$macro$100;
                                            {
                                              val fresh$macro$159 = inputpos$macro$2;
                                              {
                                                var fresh$macro$158 = 0;
                                                val fresh$macro$157 = Hw.this.falseValue.length;
                                                while$51(){
                                                  if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                    {
                                                      inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                      while$51()
                                                    }
                                                  else
                                                    ()
                                                };
                                                while$50(){
                                                  if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(fresh$macro$158 < (fresh$macro$157)).$amp$amp(input$macro$1(inputpos$macro$2) == (Hw.this.falseValue.charAt(fresh$macro$158))))
                                                    {
                                                      {
                                                        fresh$macro$158 = fresh$macro$158.$plus(1);
                                                        inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                      };
                                                      while$50()
                                                    }
                                                  else
                                                    ()
                                                };
                                                if (fresh$macro$158 == (fresh$macro$157))
                                                  {
                                                    success$macro$5 = true;
                                                    fresh$macro$160 = Hw.this.falseValue
                                                  }
                                                else
                                                  {
                                                    success$macro$5 = false;
                                                    ();
                                                    inputpos$macro$2 = fresh$macro$159
                                                  }
                                              }
                                            };
                                            if (success$macro$5)
                                              fresh$macro$99 = fresh$macro$160
                                            else
                                              ()
                                          }
                                        else
                                          fresh$macro$99 = fresh$macro$101
                                      }
                                    }
                                  else
                                    ()
                                };
                                fresh$macro$161 = fresh$macro$99
                              };
                              if (success$macro$5)
                                {
                                  fresh$macro$88.$plus$eq(fresh$macro$161);
                                  {
                                    val fresh$macro$90 = inputpos$macro$2;
                                    {
                                      {
                                        val fresh$macro$94 = inputpos$macro$2;
                                        {
                                          var fresh$macro$93 = 0;
                                          val fresh$macro$92 = Hw.this.comma.length;
                                          while$29(){
                                            if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                              {
                                                inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                while$29()
                                              }
                                            else
                                              ()
                                          };
                                          while$28(){
                                            if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(fresh$macro$93 < (fresh$macro$92)).$amp$amp(input$macro$1(inputpos$macro$2) == (Hw.this.comma.charAt(fresh$macro$93))))
                                              {
                                                {
                                                  fresh$macro$93 = fresh$macro$93.$plus(1);
                                                  inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                };
                                                while$28()
                                              }
                                            else
                                              ()
                                          };
                                          if (fresh$macro$93 == (fresh$macro$92))
                                            {
                                              success$macro$5 = true;
                                              fresh$macro$95 = Hw.this.comma
                                            }
                                          else
                                            {
                                              success$macro$5 = false;
                                              ();
                                              inputpos$macro$2 = fresh$macro$94
                                            }
                                        }
                                      };
                                      if (success$macro$5.unary_$bang)
                                        {
                                          fresh$macro$87 = false;
                                          inputpos$macro$2 = fresh$macro$90
                                        }
                                      else
                                        ()
                                    }
                                  }
                                }
                              else
                                {
                                  fresh$macro$87 = false;
                                  inputpos$macro$2 = fresh$macro$96
                                }
                            }
                          };
                          while$52()
                        }
                      else
                        ()
                    };
                    {
                      fresh$macro$89 = fresh$macro$88.toList;
                      success$macro$5 = true
                    }
                  }
                else
                  ()
              };
              if (success$macro$5)
                {
                  val fresh$macro$165 = inputpos$macro$2;
                  {
                    var fresh$macro$164 = 0;
                    val fresh$macro$163 = Hw.this.closeSBracket.length;
                    while$54(){
                      if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                        {
                          inputpos$macro$2 = inputpos$macro$2.$plus(1);
                          while$54()
                        }
                      else
                        ()
                    };
                    while$53(){
                      if (inputpos$macro$2 < (inputsize$macro$3).$amp$amp(fresh$macro$164 < (fresh$macro$163)).$amp$amp(input$macro$1(inputpos$macro$2) == (Hw.this.closeSBracket.charAt(fresh$macro$164))))
                        {
                          {
                            fresh$macro$164 = fresh$macro$164.$plus(1);
                            inputpos$macro$2 = inputpos$macro$2.$plus(1)
                          };
                          while$53()
                        }
                      else
                        ()
                    };
                    if (fresh$macro$164 == (fresh$macro$163))
                      {
                        success$macro$5 = true;
                        ()
                      }
                    else
                      {
                        success$macro$5 = false;
                        ();
                        inputpos$macro$2 = fresh$macro$165
                      }
                  }
                }
              else
                ()
            };
            ParseResult(success$macro$5, error, if (success$macro$5)
              fresh$macro$89
            else
              null, inputpos$macro$2)
          }
        }
      }
    };
    // def value:Parser[Any] = whitespaces ~> (obj | arr | stringLit | decimalNumber | nullValue | trueValue | falseValue)
    def value(input$macro$1: Array[Char], fresh$macro$166: Int = 0): ParseResult[Any, String] = {
      var error = " ";
      {
        var inputpos$macro$2 = fresh$macro$166;
        val inputsize$macro$3 = input$macro$1.size;
        {
          val inputpositioned$macro$4 = new fastparsers.tools.ToPosition.IndexedCharSeqToPosition(input$macro$1);
          {
            var success$macro$5 = false;
            var fresh$macro$169: Any = null;
            var fresh$macro$171: Any = null;
            var fresh$macro$173: Any = null;
            var fresh$macro$175: Any = null;
            var fresh$macro$177: Any = null;
            var fresh$macro$179: Any = null;
            var fresh$macro$183: List[Any] = null;
            var fresh$macro$189: Array[Char] = null;
            var fresh$macro$193: CharArrayStruct = null;
            var fresh$macro$199: Any = null;
            var fresh$macro$200: scala.Tuple2[CharArrayStruct, Any] = null;
            var fresh$macro$201: Any = null;
            var fresh$macro$206: Any = null;
            var fresh$macro$209: List[Any] = null;
            var fresh$macro$215: Array[Char] = null;
            var fresh$macro$218: Any = null;
            var fresh$macro$223: Any = null;
            var fresh$macro$226: CharArrayStruct = null;
            var fresh$macro$229: CharArrayStruct = null;
            var fresh$macro$235: Array[Char] = null;
            var fresh$macro$240: Array[Char] = null;
            var fresh$macro$245: Array[Char] = null;
            {
              {
                val fresh$macro$167 = inputpos$macro$2;
                while$55(){
                  if ((inputpos$macro$2 < inputsize$macro$3) &&
                      (input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) ||
                      (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                    {
                      inputpos$macro$2 = inputpos$macro$2.$plus(1);
                      while$55()
                    }
                  else
                    ()
                };
                ();
                success$macro$5 = true
              };
              if (success$macro$5)
                {
                  val fresh$macro$170 = inputpos$macro$2;
                  {
                    {
                      val fresh$macro$172 = inputpos$macro$2;
                      {
                        {
                          val fresh$macro$174 = inputpos$macro$2;
                          {
                            {
                              val fresh$macro$176 = inputpos$macro$2;
                              {
                                {
                                  val fresh$macro$178 = inputpos$macro$2;
                                  {
                                    {
                                      val fresh$macro$180 = inputpos$macro$2;
                                      {
                                        {
                                          {
                                            {
                                              if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == '{') )
                                                {
                                                  ();
                                                  inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                  success$macro$5 = true
                                                }
                                              else
                                                {
                                                  success$macro$5 = false;
                                                  ()
                                                };
                                              if (success$macro$5)
                                                {
                                                  var fresh$macro$181 = true;
                                                  val fresh$macro$182 = new ListBuffer[Any]();
                                                  while$62(){
                                                    if (fresh$macro$181)
                                                      {
                                                        {
                                                          val fresh$macro$190 = inputpos$macro$2;
                                                          {
                                                            {
                                                              {
                                                                {
                                                                  val fresh$macro$192 = inputpos$macro$2;
                                                                  {
                                                                    while$59(){
                                                                      if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                                        {
                                                                          inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                          while$59()
                                                                        }
                                                                      else
                                                                        ()
                                                                    };
                                                                    val fresh$macro$191 = inputpos$macro$2;
                                                                    if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == ('\"')))
                                                                      {
                                                                        inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                        while$58(){
                                                                          if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2).$bang$eq('\"')))
                                                                            {
                                                                              {
                                                                                if (input$macro$1(inputpos$macro$2) == ('\\'))
                                                                                  inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                                                else
                                                                                  ();
                                                                                inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                                              };
                                                                              while$58()
                                                                            }
                                                                          else
                                                                            ()
                                                                        };
                                                                        if (inputpos$macro$2 < (inputsize$macro$3))
                                                                          {
                                                                            success$macro$5 = true;
                                                                            inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                            fresh$macro$193 = new CharArrayStruct(input$macro$1, fresh$macro$191, inputpos$macro$2)
                                                                          }
                                                                        else
                                                                          {
                                                                            success$macro$5 = false;
                                                                            ();
                                                                            inputpos$macro$2 = fresh$macro$192
                                                                          }
                                                                      }
                                                                    else
                                                                      {
                                                                        success$macro$5 = false;
                                                                        ();
                                                                        inputpos$macro$2 = fresh$macro$192
                                                                      }
                                                                  }
                                                                };
                                                                if (success$macro$5)
                                                                  {
                                                                    {
                                                                      {
                                                                        val fresh$macro$197 = inputpos$macro$2;
                                                                        {
                                                                          var fresh$macro$196 = 0;
                                                                          val fresh$macro$195 = Hw.this.points.length;
                                                                          while$61(){
                                                                            if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                                              {
                                                                                inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                                while$61()
                                                                              }
                                                                            else
                                                                              ()
                                                                          };
                                                                          while$60(){
                                                                            if (inputpos$macro$2 < (inputsize$macro$3) && (fresh$macro$196 < (fresh$macro$195)) && (input$macro$1(inputpos$macro$2) == (Hw.this.points.charAt(fresh$macro$196))))
                                                                              {
                                                                                {
                                                                                  fresh$macro$196 = fresh$macro$196.$plus(1);
                                                                                  inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                                                };
                                                                                while$60()
                                                                              }
                                                                            else
                                                                              ()
                                                                          };
                                                                          if (fresh$macro$196 == (fresh$macro$195))
                                                                            {
                                                                              success$macro$5 = true;
                                                                              ()
                                                                            }
                                                                          else
                                                                            {
                                                                              success$macro$5 = false;
                                                                              ();
                                                                              inputpos$macro$2 = fresh$macro$197
                                                                            }
                                                                        }
                                                                      };
                                                                      if (success$macro$5)
                                                                        {
                                                                          val fresh$macro$198 = value(input$macro$1, inputpos$macro$2);
                                                                          success$macro$5 = fresh$macro$198.success;
                                                                          if (success$macro$5)
                                                                            {
                                                                              inputpos$macro$2 = fresh$macro$198.inputPos;
                                                                              fresh$macro$199 = fresh$macro$198.result
                                                                            }
                                                                          else
                                                                            error = fresh$macro$198.error
                                                                        }
                                                                      else
                                                                        ()
                                                                    };
                                                                    fresh$macro$200 = scala.Tuple2(fresh$macro$193, fresh$macro$199)
                                                                  }
                                                                else
                                                                  ()
                                                              };
                                                              fresh$macro$201 = fresh$macro$200
                                                            };
                                                            if (success$macro$5)
                                                              {
                                                                fresh$macro$182.$plus$eq(fresh$macro$201);
                                                                {
                                                                  val fresh$macro$184 = inputpos$macro$2;
                                                                  {
                                                                    {
                                                                      val fresh$macro$188 = inputpos$macro$2;
                                                                      {
                                                                        var fresh$macro$187 = 0;
                                                                        val fresh$macro$186 = Hw.this.comma.length;
                                                                        while$57(){
                                                                          if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                                            {
                                                                              inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                              while$57()
                                                                            }
                                                                          else
                                                                            ()
                                                                        };
                                                                        while$56(){
                                                                          if (inputpos$macro$2 < (inputsize$macro$3) && (fresh$macro$187 < (fresh$macro$186)) && (input$macro$1(inputpos$macro$2) == (Hw.this.comma.charAt(fresh$macro$187))))
                                                                            {
                                                                              {
                                                                                fresh$macro$187 = fresh$macro$187.$plus(1);
                                                                                inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                                              };
                                                                              while$56()
                                                                            }
                                                                          else
                                                                            ()
                                                                        };
                                                                        if (fresh$macro$187 == (fresh$macro$186))
                                                                          {
                                                                            success$macro$5 = true;
                                                                            fresh$macro$189 = Hw.this.comma
                                                                          }
                                                                        else
                                                                          {
                                                                            success$macro$5 = false;
                                                                            ();
                                                                            inputpos$macro$2 = fresh$macro$188
                                                                          }
                                                                      }
                                                                    };
                                                                    if (success$macro$5.unary_$bang)
                                                                      {
                                                                        fresh$macro$181 = false;
                                                                        inputpos$macro$2 = fresh$macro$184
                                                                      }
                                                                    else
                                                                      ()
                                                                  }
                                                                }
                                                              }
                                                            else
                                                              {
                                                                fresh$macro$181 = false;
                                                                inputpos$macro$2 = fresh$macro$190
                                                              }
                                                          }
                                                        };
                                                        while$62()
                                                      }
                                                    else
                                                      ()
                                                  };
                                                  {
                                                    fresh$macro$183 = fresh$macro$182.toList;
                                                    success$macro$5 = true
                                                  }
                                                }
                                              else
                                                ()
                                            };
                                            if (success$macro$5)
                                              {
                                                val fresh$macro$205 = inputpos$macro$2;
                                                {
                                                  var fresh$macro$204 = 0;
                                                  val fresh$macro$203 = Hw.this.closeBracket.length;
                                                  while$64(){
                                                    if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                      {
                                                        inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                        while$64()
                                                      }
                                                    else
                                                      ()
                                                  };
                                                  while$63(){
                                                    if (inputpos$macro$2 < (inputsize$macro$3) && (fresh$macro$204 < (fresh$macro$203)) && (input$macro$1(inputpos$macro$2) == (Hw.this.closeBracket.charAt(fresh$macro$204))))
                                                      {
                                                        {
                                                          fresh$macro$204 = fresh$macro$204.$plus(1);
                                                          inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                        };
                                                        while$63()
                                                      }
                                                    else
                                                      ()
                                                  };
                                                  if (fresh$macro$204 == (fresh$macro$203))
                                                    {
                                                      success$macro$5 = true;
                                                      ()
                                                    }
                                                  else
                                                    {
                                                      success$macro$5 = false;
                                                      ();
                                                      inputpos$macro$2 = fresh$macro$205
                                                    }
                                                }
                                              }
                                            else
                                              ()
                                          };
                                          fresh$macro$206 = fresh$macro$183
                                        };
                                        if (success$macro$5.unary_$bang)
                                          {
                                            inputpos$macro$2 = fresh$macro$180;
                                            {
                                              {
                                                {
                                                  if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == ('[')))
                                                    {
                                                      ();
                                                      inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                      success$macro$5 = true
                                                    }
                                                  else
                                                    {
                                                      success$macro$5 = false;
                                                      ()
                                                    };
                                                  if (success$macro$5)
                                                    {
                                                      var fresh$macro$207 = true;
                                                      val fresh$macro$208 = new ListBuffer[Any]();
                                                      while$67(){
                                                        if (fresh$macro$207)
                                                          {
                                                            {
                                                              val fresh$macro$216 = inputpos$macro$2;
                                                              {
                                                                {
                                                                  val fresh$macro$217 = value(input$macro$1, inputpos$macro$2);
                                                                  success$macro$5 = fresh$macro$217.success;
                                                                  if (success$macro$5)
                                                                    {
                                                                      inputpos$macro$2 = fresh$macro$217.inputPos;
                                                                      fresh$macro$218 = fresh$macro$217.result
                                                                    }
                                                                  else
                                                                    error = fresh$macro$217.error
                                                                };
                                                                if (success$macro$5)
                                                                  {
                                                                    fresh$macro$208.$plus$eq(fresh$macro$218);
                                                                    {
                                                                      val fresh$macro$210 = inputpos$macro$2;
                                                                      {
                                                                        {
                                                                          val fresh$macro$214 = inputpos$macro$2;
                                                                          {
                                                                            var fresh$macro$213 = 0;
                                                                            val fresh$macro$212 = Hw.this.comma.length;
                                                                            while$66(){
                                                                              if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                                                {
                                                                                  inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                                  while$66()
                                                                                }
                                                                              else
                                                                                ()
                                                                            };
                                                                            while$65(){
                                                                              if (inputpos$macro$2 < (inputsize$macro$3) && (fresh$macro$213 < (fresh$macro$212)) && (input$macro$1(inputpos$macro$2) == (Hw.this.comma.charAt(fresh$macro$213))))
                                                                                {
                                                                                  {
                                                                                    fresh$macro$213 = fresh$macro$213.$plus(1);
                                                                                    inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                                                  };
                                                                                  while$65()
                                                                                }
                                                                              else
                                                                                ()
                                                                            };
                                                                            if (fresh$macro$213 == (fresh$macro$212))
                                                                              {
                                                                                success$macro$5 = true;
                                                                                fresh$macro$215 = Hw.this.comma
                                                                              }
                                                                            else
                                                                              {
                                                                                success$macro$5 = false;
                                                                                ();
                                                                                inputpos$macro$2 = fresh$macro$214
                                                                              }
                                                                          }
                                                                        };
                                                                        if (success$macro$5.unary_$bang)
                                                                          {
                                                                            fresh$macro$207 = false;
                                                                            inputpos$macro$2 = fresh$macro$210
                                                                          }
                                                                        else
                                                                          ()
                                                                      }
                                                                    }
                                                                  }
                                                                else
                                                                  {
                                                                    fresh$macro$207 = false;
                                                                    inputpos$macro$2 = fresh$macro$216
                                                                  }
                                                              }
                                                            };
                                                            while$67()
                                                          }
                                                        else
                                                          ()
                                                      };
                                                      {
                                                        fresh$macro$209 = fresh$macro$208.toList;
                                                        success$macro$5 = true
                                                      }
                                                    }
                                                  else
                                                    ()
                                                };
                                                if (success$macro$5)
                                                  {
                                                    val fresh$macro$222 = inputpos$macro$2;
                                                    {
                                                      var fresh$macro$221 = 0;
                                                      val fresh$macro$220 = Hw.this.closeSBracket.length;
                                                      while$69(){
                                                        if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                          {
                                                            inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                            while$69()
                                                          }
                                                        else
                                                          ()
                                                      };
                                                      while$68(){
                                                        if (inputpos$macro$2 < (inputsize$macro$3) && (fresh$macro$221 < (fresh$macro$220)) && (input$macro$1(inputpos$macro$2) == (Hw.this.closeSBracket.charAt(fresh$macro$221))))
                                                          {
                                                            {
                                                              fresh$macro$221 = fresh$macro$221.$plus(1);
                                                              inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                            };
                                                            while$68()
                                                          }
                                                        else
                                                          ()
                                                      };
                                                      if (fresh$macro$221 == (fresh$macro$220))
                                                        {
                                                          success$macro$5 = true;
                                                          ()
                                                        }
                                                      else
                                                        {
                                                          success$macro$5 = false;
                                                          ();
                                                          inputpos$macro$2 = fresh$macro$222
                                                        }
                                                    }
                                                  }
                                                else
                                                  ()
                                              };
                                              fresh$macro$223 = fresh$macro$209
                                            };
                                            if (success$macro$5)
                                              fresh$macro$179 = fresh$macro$223
                                            else
                                              ()
                                          }
                                        else
                                          fresh$macro$179 = fresh$macro$206
                                      }
                                    };
                                    if (success$macro$5.unary_$bang)
                                      {
                                        inputpos$macro$2 = fresh$macro$178;
                                        {
                                          val fresh$macro$225 = inputpos$macro$2;
                                          {
                                            while$71(){
                                              if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                {
                                                  inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                  while$71()
                                                }
                                              else
                                                ()
                                            };
                                            val fresh$macro$224 = inputpos$macro$2;
                                            if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == ('\"')))
                                              {
                                                inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                while$70(){
                                                  if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2).$bang$eq('\"')))
                                                    {
                                                      {
                                                        if (input$macro$1(inputpos$macro$2) == ('\\'))
                                                          inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                        else
                                                          ();
                                                        inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                      };
                                                      while$70()
                                                    }
                                                  else
                                                    ()
                                                };
                                                if (inputpos$macro$2 < (inputsize$macro$3))
                                                  {
                                                    success$macro$5 = true;
                                                    inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                    fresh$macro$226 = new CharArrayStruct(input$macro$1, fresh$macro$224, inputpos$macro$2)
                                                  }
                                                else
                                                  {
                                                    success$macro$5 = false;
                                                    ();
                                                    inputpos$macro$2 = fresh$macro$225
                                                  }
                                              }
                                            else
                                              {
                                                success$macro$5 = false;
                                                ();
                                                inputpos$macro$2 = fresh$macro$225
                                              }
                                          }
                                        };
                                        if (success$macro$5)
                                          fresh$macro$177 = fresh$macro$226
                                        else
                                          ()
                                      }
                                    else
                                      fresh$macro$177 = fresh$macro$179
                                  }
                                };
                                if (success$macro$5.unary_$bang)
                                  {
                                    inputpos$macro$2 = fresh$macro$176;
                                    {
                                      val fresh$macro$230 = inputpos$macro$2;
                                      {
                                        while$75(){
                                          if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                            {
                                              inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                              while$75()
                                            }
                                          else
                                            ()
                                        };
                                        var fresh$macro$227 = false;
                                        val fresh$macro$228 = inputpos$macro$2;
                                        success$macro$5 = false;
                                        if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == ('-')))
                                          inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                        else
                                          ();
                                        if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2).$greater$eq('0')) && (input$macro$1(inputpos$macro$2) < $eq('9')))
                                          {
                                            inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                            while$73(){
                                              if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2).$greater$eq('0')) && (input$macro$1(inputpos$macro$2) < $eq('9')))
                                                {
                                                  inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                  while$73()
                                                }
                                              else
                                                ()
                                            };
                                            if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == ('.')))
                                              {
                                                inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                while$72(){
                                                  if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2).$greater$eq('0')) && (input$macro$1(inputpos$macro$2) < $eq('9')))
                                                    {
                                                      inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                      while$72()
                                                    }
                                                  else
                                                    ()
                                                }
                                              }
                                            else
                                              ();
                                            success$macro$5 = true;
                                            fresh$macro$229 = new CharArrayStruct(input$macro$1, fresh$macro$228, inputpos$macro$2)
                                          }
                                        else
                                          if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == ('.')))
                                            {
                                              inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                              if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2).$greater$eq('0')) && (input$macro$1(inputpos$macro$2) < $eq('9')))
                                                {
                                                  inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                  while$74(){
                                                    if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2).$greater$eq('0')) && (input$macro$1(inputpos$macro$2) < $eq('9')))
                                                      {
                                                        inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                        while$74()
                                                      }
                                                    else
                                                      ()
                                                  };
                                                  success$macro$5 = true;
                                                  fresh$macro$229 = new CharArrayStruct(input$macro$1, fresh$macro$228, inputpos$macro$2)
                                                }
                                              else
                                                ()
                                            }
                                          else
                                            ()
                                      }
                                    };
                                    if (success$macro$5)
                                      fresh$macro$175 = fresh$macro$229
                                    else
                                      ()
                                  }
                                else
                                  fresh$macro$175 = fresh$macro$177
                              }
                            };
                            if (success$macro$5.unary_$bang)
                              {
                                inputpos$macro$2 = fresh$macro$174;
                                {
                                  val fresh$macro$234 = inputpos$macro$2;
                                  {
                                    var fresh$macro$233 = 0;
                                    val fresh$macro$232 = Hw.this.nullValue.length;
                                    while$77(){
                                      if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                        {
                                          inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                          while$77()
                                        }
                                      else
                                        ()
                                    };
                                    while$76(){
                                      if (inputpos$macro$2 < (inputsize$macro$3) && (fresh$macro$233 < (fresh$macro$232)) && (input$macro$1(inputpos$macro$2) == (Hw.this.nullValue.charAt(fresh$macro$233))))
                                        {
                                          {
                                            fresh$macro$233 = fresh$macro$233.$plus(1);
                                            inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                          };
                                          while$76()
                                        }
                                      else
                                        ()
                                    };
                                    if (fresh$macro$233 == (fresh$macro$232))
                                      {
                                        success$macro$5 = true;
                                        fresh$macro$235 = Hw.this.nullValue
                                      }
                                    else
                                      {
                                        success$macro$5 = false;
                                        ();
                                        inputpos$macro$2 = fresh$macro$234
                                      }
                                  }
                                };
                                if (success$macro$5)
                                  fresh$macro$173 = fresh$macro$235
                                else
                                  ()
                              }
                            else
                              fresh$macro$173 = fresh$macro$175
                          }
                        };
                        if (success$macro$5.unary_$bang)
                          {
                            inputpos$macro$2 = fresh$macro$172;
                            {
                              val fresh$macro$239 = inputpos$macro$2;
                              {
                                var fresh$macro$238 = 0;
                                val fresh$macro$237 = Hw.this.trueValue.length;
                                while$79(){
                                  if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                    {
                                      inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                      while$79()
                                    }
                                  else
                                    ()
                                };
                                while$78(){
                                  if (inputpos$macro$2 < (inputsize$macro$3) && (fresh$macro$238 < (fresh$macro$237)) && (input$macro$1(inputpos$macro$2) == (Hw.this.trueValue.charAt(fresh$macro$238))))
                                    {
                                      {
                                        fresh$macro$238 = fresh$macro$238.$plus(1);
                                        inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                      };
                                      while$78()
                                    }
                                  else
                                    ()
                                };
                                if (fresh$macro$238 == (fresh$macro$237))
                                  {
                                    success$macro$5 = true;
                                    fresh$macro$240 = Hw.this.trueValue
                                  }
                                else
                                  {
                                    success$macro$5 = false;
                                    ();
                                    inputpos$macro$2 = fresh$macro$239
                                  }
                              }
                            };
                            if (success$macro$5)
                              fresh$macro$171 = fresh$macro$240
                            else
                              ()
                          }
                        else
                          fresh$macro$171 = fresh$macro$173
                      }
                    };
                    if (success$macro$5.unary_$bang)
                      {
                        inputpos$macro$2 = fresh$macro$170;
                        {
                          val fresh$macro$244 = inputpos$macro$2;
                          {
                            var fresh$macro$243 = 0;
                            val fresh$macro$242 = Hw.this.falseValue.length;
                            while$81(){
                              if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                {
                                  inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                  while$81()
                                }
                              else
                                ()
                            };
                            while$80(){
                              if (inputpos$macro$2 < (inputsize$macro$3) && (fresh$macro$243 < (fresh$macro$242)) && (input$macro$1(inputpos$macro$2) == (Hw.this.falseValue.charAt(fresh$macro$243))))
                                {
                                  {
                                    fresh$macro$243 = fresh$macro$243.$plus(1);
                                    inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                  };
                                  while$80()
                                }
                              else
                                ()
                            };
                            if (fresh$macro$243 == (fresh$macro$242))
                              {
                                success$macro$5 = true;
                                fresh$macro$245 = Hw.this.falseValue
                              }
                            else
                              {
                                success$macro$5 = false;
                                ();
                                inputpos$macro$2 = fresh$macro$244
                              }
                          }
                        };
                        if (success$macro$5)
                          fresh$macro$169 = fresh$macro$245
                        else
                          ()
                      }
                    else
                      fresh$macro$169 = fresh$macro$171
                  }
                }
              else
                ()
            };
            ParseResult(success$macro$5, error, if (success$macro$5)
              fresh$macro$169
            else
              null, inputpos$macro$2)
          }
        }
      }
    };
    //       def x : Parser[Any] = whitespaces ~> (whitespaces | nullValue | nullValue )
    def x(input$macro$1: Array[Char], fresh$macro$246: Int = 0): ParseResult[Any, String] = {
      var error = " ";
      {
        var inputpos$macro$2 = fresh$macro$246;
        val inputsize$macro$3 = input$macro$1.size;
        {
          val inputpositioned$macro$4 = new fastparsers.tools.ToPosition.IndexedCharSeqToPosition(input$macro$1);
          {
            var success$macro$5 = false;
            var fresh$macro$249: Object = null;
            var fresh$macro$251: Object = null;
            var fresh$macro$255: CharArrayStruct = null;
            var fresh$macro$260: Array[Char] = null;
            var fresh$macro$265: Array[Char] = null;
            {
              {
                val fresh$macro$247 = inputpos$macro$2;
                while$82(){
                  if((inputpos$macro$2 < inputsize$macro$3) &&
                    (input$macro$1(inputpos$macro$2) == ' ') ||
                    (input$macro$1(inputpos$macro$2) == '\t') ||
                    (input$macro$1(inputpos$macro$2) == '\n') ||
                    (input$macro$1(inputpos$macro$2) == '\r') )
                    {
                      inputpos$macro$2++;
                      while$82()
                    }
                  else
                    ()
                };
                ();
                success$macro$5 = true
              };
              if (success$macro$5)
                {
                  val fresh$macro$250 = inputpos$macro$2;
                  {
                    {
                      val fresh$macro$252 = inputpos$macro$2;
                      {
                        {
                          val fresh$macro$253 = inputpos$macro$2;
                          while$83(){
                            if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                              {
                                inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                while$83()
                              }
                            else
                              ()
                          };
                          fresh$macro$255 = new CharArrayStruct(input$macro$1, fresh$macro$253, inputpos$macro$2);
                          success$macro$5 = true
                        };
                        if (success$macro$5.unary_$bang)
                          {
                            inputpos$macro$2 = fresh$macro$252;
                            {
                              val fresh$macro$259 = inputpos$macro$2;
                              {
                                var fresh$macro$258 = 0;
                                val fresh$macro$257 = Hw.this.nullValue.length;
                                while$85(){
                                  if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                    {
                                      inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                      while$85()
                                    }
                                  else
                                    ()
                                };
                                while$84(){
                                  if (inputpos$macro$2 < (inputsize$macro$3) && (fresh$macro$258 < (fresh$macro$257)) && (input$macro$1(inputpos$macro$2) == (Hw.this.nullValue.charAt(fresh$macro$258))))
                                    {
                                      {
                                        fresh$macro$258 = fresh$macro$258.$plus(1);
                                        inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                      };
                                      while$84()
                                    }
                                  else
                                    ()
                                };
                                if (fresh$macro$258 == (fresh$macro$257))
                                  {
                                    success$macro$5 = true;
                                    fresh$macro$260 = Hw.this.nullValue
                                  }
                                else
                                  {
                                    success$macro$5 = false;
                                    ();
                                    inputpos$macro$2 = fresh$macro$259
                                  }
                              }
                            };
                            if (success$macro$5)
                              fresh$macro$251 = fresh$macro$260
                            else
                              ()
                          }
                        else
                          fresh$macro$251 = fresh$macro$255
                      }
                    };
                    if (success$macro$5.unary_$bang)
                      {
                        inputpos$macro$2 = fresh$macro$250;
                        {
                          val fresh$macro$264 = inputpos$macro$2;
                          {
                            var fresh$macro$263 = 0;
                            val fresh$macro$262 = Hw.this.nullValue.length;
                            while$87(){
                              if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                {
                                  inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                  while$87()
                                }
                              else
                                ()
                            };
                            while$86(){
                              if (inputpos$macro$2 < (inputsize$macro$3) && (fresh$macro$263 < (fresh$macro$262)) && (input$macro$1(inputpos$macro$2) == (Hw.this.nullValue.charAt(fresh$macro$263))))
                                {
                                  {
                                    fresh$macro$263 = fresh$macro$263.$plus(1);
                                    inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                  };
                                  while$86()
                                }
                              else
                                ()
                            };
                            if (fresh$macro$263 == (fresh$macro$262))
                              {
                                success$macro$5 = true;
                                fresh$macro$265 = Hw.this.nullValue
                              }
                            else
                              {
                                success$macro$5 = false;
                                ();
                                inputpos$macro$2 = fresh$macro$264
                              }
                          }
                        };
                        if (success$macro$5)
                          fresh$macro$249 = fresh$macro$265
                        else
                          ()
                      }
                    else
                      fresh$macro$249 = fresh$macro$251
                  }
                }
              else
                ()
            };
            ParseResult(success$macro$5, error, if (success$macro$5)
              fresh$macro$249
            else
              null, inputpos$macro$2)
          }
        }
      }
    };
    def obj(input$macro$1: Array[Char], fresh$macro$266: Int = 0): ParseResult[Any, String] @fastparsers.framework.saveAST(FastParsersCharArray.baseParsers[List[Any]](FastParsersCharArray.elemParser('{').$tilde$greater[List[Any]](FastParsersCharArray.repsep[Any, Array[Char]](FastParsersCharArray.compound[Any](FastParsersCharArray.baseParsers[InputWindow[Array[Char]]](FastParsersCharArray.stringLit).$tilde[Any](FastParsersCharArray.baseParsers[Array[Char]](FastParsersCharArray.lit(Hw.this.points)).$tilde$greater[Any](FastParsersCharArray.compound[Any](FastParsersCharArray.baseParsers[InputWindow[Array[Char]]](FastParsersCharArray.whitespaces).$tilde$greater[Any](FastParsersCharArray.baseParsers[Any](FastParsersCharArray.baseParsers[Any](FastParsersCharArray.baseParsers[Any](FastParsersCharArray.baseParsers[Any](FastParsersCharArray.baseParsers[Any](FastParsersCharArray.baseParsers[Any](FastParsersCharArray.call[Any]("obj")).$bar[Any](FastParsersCharArray.compound[Any](FastParsersCharArray.baseParsers[List[Any]](FastParsersCharArray.elemParser('[').$tilde$greater[List[Any]](FastParsersCharArray.repsep[Any, Array[Char]](FastParsersCharArray.call[Any]("value"), FastParsersCharArray.lit(Hw.this.comma)))) < $tilde[Array[Char]](FastParsersCharArray.lit(Hw.this.closeSBracket))))).$bar[Any](FastParsersCharArray.stringLit)).$bar[Any](FastParsersCharArray.decimalNumber)).$bar[Any](FastParsersCharArray.lit(Hw.this.nullValue))).$bar[Any](FastParsersCharArray.lit(Hw.this.trueValue))).$bar[Any](FastParsersCharArray.lit(Hw.this.falseValue))))))), FastParsersCharArray.lit(Hw.this.comma)))) < $tilde[Array[Char]](FastParsersCharArray.lit(Hw.this.closeBracket))) = {
      var error = " ";
      {
        var inputpos$macro$2 = fresh$macro$266;
        val inputsize$macro$3 = input$macro$1.size;
        {
          val inputpositioned$macro$4 = new fastparsers.tools.ToPosition.IndexedCharSeqToPosition(input$macro$1);
          {
            var success$macro$5 = false;
            var fresh$macro$269: List[Any] = null;
            var fresh$macro$275: Array[Char] = null;
            var fresh$macro$279: CharArrayStruct = null;
            var fresh$macro$286: Any = null;
            var fresh$macro$288: Any = null;
            var fresh$macro$290: Any = null;
            var fresh$macro$292: Any = null;
            var fresh$macro$294: Any = null;
            var fresh$macro$296: Any = null;
            var fresh$macro$299: Any = null;
            var fresh$macro$302: List[Any] = null;
            var fresh$macro$308: Array[Char] = null;
            var fresh$macro$311: Any = null;
            var fresh$macro$316: Any = null;
            var fresh$macro$319: CharArrayStruct = null;
            var fresh$macro$322: CharArrayStruct = null;
            var fresh$macro$328: Array[Char] = null;
            var fresh$macro$333: Array[Char] = null;
            var fresh$macro$338: Array[Char] = null;
            var fresh$macro$339: Any = null;
            var fresh$macro$340: scala.Tuple2[CharArrayStruct, Any] = null;
            var fresh$macro$341: Any = null;
            {
              {
                if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == ('{')))
                  {
                    ();
                    inputpos$macro$2 = inputpos$macro$2.$plus(1);
                    success$macro$5 = true
                  }
                else
                  {
                    success$macro$5 = false;
                    ()
                  };
                if (success$macro$5)
                  {
                    var fresh$macro$267 = true;
                    val fresh$macro$268 = new ListBuffer[Any]();
                    while$112(){
                      if (fresh$macro$267)
                        {
                          {
                            val fresh$macro$276 = inputpos$macro$2;
                            {
                              {
                                {
                                  {
                                    val fresh$macro$278 = inputpos$macro$2;
                                    {
                                      while$91(){
                                        if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                          {
                                            inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                            while$91()
                                          }
                                        else
                                          ()
                                      };
                                      val fresh$macro$277 = inputpos$macro$2;
                                      if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == ('\"')))
                                        {
                                          inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                          while$90(){
                                            if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2).$bang$eq('\"')))
                                              {
                                                {
                                                  if (input$macro$1(inputpos$macro$2) == ('\\'))
                                                    inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                  else
                                                    ();
                                                  inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                };
                                                while$90()
                                              }
                                            else
                                              ()
                                          };
                                          if (inputpos$macro$2 < (inputsize$macro$3))
                                            {
                                              success$macro$5 = true;
                                              inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                              fresh$macro$279 = new CharArrayStruct(input$macro$1, fresh$macro$277, inputpos$macro$2)
                                            }
                                          else
                                            {
                                              success$macro$5 = false;
                                              ();
                                              inputpos$macro$2 = fresh$macro$278
                                            }
                                        }
                                      else
                                        {
                                          success$macro$5 = false;
                                          ();
                                          inputpos$macro$2 = fresh$macro$278
                                        }
                                    }
                                  };
                                  if (success$macro$5)
                                    {
                                      {
                                        {
                                          val fresh$macro$283 = inputpos$macro$2;
                                          {
                                            var fresh$macro$282 = 0;
                                            val fresh$macro$281 = Hw.this.points.length;
                                            while$93(){
                                              if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                {
                                                  inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                  while$93()
                                                }
                                              else
                                                ()
                                            };
                                            while$92(){
                                              if (inputpos$macro$2 < (inputsize$macro$3) && (fresh$macro$282 < (fresh$macro$281)) && (input$macro$1(inputpos$macro$2) == (Hw.this.points.charAt(fresh$macro$282))))
                                                {
                                                  {
                                                    fresh$macro$282 = fresh$macro$282.$plus(1);
                                                    inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                  };
                                                  while$92()
                                                }
                                              else
                                                ()
                                            };
                                            if (fresh$macro$282 == (fresh$macro$281))
                                              {
                                                success$macro$5 = true;
                                                ()
                                              }
                                            else
                                              {
                                                success$macro$5 = false;
                                                ();
                                                inputpos$macro$2 = fresh$macro$283
                                              }
                                          }
                                        };
                                        if (success$macro$5)
                                          {
                                            {
                                              {
                                                val fresh$macro$284 = inputpos$macro$2;
                                                while$94(){
                                                  if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                    {
                                                      inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                      while$94()
                                                    }
                                                  else
                                                    ()
                                                };
                                                ();
                                                success$macro$5 = true
                                              };
                                              if (success$macro$5)
                                                {
                                                  val fresh$macro$287 = inputpos$macro$2;
                                                  {
                                                    {
                                                      val fresh$macro$289 = inputpos$macro$2;
                                                      {
                                                        {
                                                          val fresh$macro$291 = inputpos$macro$2;
                                                          {
                                                            {
                                                              val fresh$macro$293 = inputpos$macro$2;
                                                              {
                                                                {
                                                                  val fresh$macro$295 = inputpos$macro$2;
                                                                  {
                                                                    {
                                                                      val fresh$macro$297 = inputpos$macro$2;
                                                                      {
                                                                        {
                                                                          val fresh$macro$298 = obj(input$macro$1, inputpos$macro$2);
                                                                          success$macro$5 = fresh$macro$298.success;
                                                                          if (success$macro$5)
                                                                            {
                                                                              inputpos$macro$2 = fresh$macro$298.inputPos;
                                                                              fresh$macro$299 = fresh$macro$298.result
                                                                            }
                                                                          else
                                                                            error = fresh$macro$298.error
                                                                        };
                                                                        if (success$macro$5.unary_$bang)
                                                                          {
                                                                            inputpos$macro$2 = fresh$macro$297;
                                                                            {
                                                                              {
                                                                                {
                                                                                  if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == ('[')))
                                                                                    {
                                                                                      ();
                                                                                      inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                                      success$macro$5 = true
                                                                                    }
                                                                                  else
                                                                                    {
                                                                                      success$macro$5 = false;
                                                                                      ()
                                                                                    };
                                                                                  if (success$macro$5)
                                                                                    {
                                                                                      var fresh$macro$300 = true;
                                                                                      val fresh$macro$301 = new ListBuffer[Any]();
                                                                                      while$97(){
                                                                                        if (fresh$macro$300)
                                                                                          {
                                                                                            {
                                                                                              val fresh$macro$309 = inputpos$macro$2;
                                                                                              {
                                                                                                {
                                                                                                  val fresh$macro$310 = value(input$macro$1, inputpos$macro$2);
                                                                                                  success$macro$5 = fresh$macro$310.success;
                                                                                                  if (success$macro$5)
                                                                                                    {
                                                                                                      inputpos$macro$2 = fresh$macro$310.inputPos;
                                                                                                      fresh$macro$311 = fresh$macro$310.result
                                                                                                    }
                                                                                                  else
                                                                                                    error = fresh$macro$310.error
                                                                                                };
                                                                                                if (success$macro$5)
                                                                                                  {
                                                                                                    fresh$macro$301.$plus$eq(fresh$macro$311);
                                                                                                    {
                                                                                                      val fresh$macro$303 = inputpos$macro$2;
                                                                                                      {
                                                                                                        {
                                                                                                          val fresh$macro$307 = inputpos$macro$2;
                                                                                                          {
                                                                                                            var fresh$macro$306 = 0;
                                                                                                            val fresh$macro$305 = Hw.this.comma.length;
                                                                                                            while$96(){
                                                                                                              if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                                                                                {
                                                                                                                  inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                                                                  while$96()
                                                                                                                }
                                                                                                              else
                                                                                                                ()
                                                                                                            };
                                                                                                            while$95(){
                                                                                                              if (inputpos$macro$2 < (inputsize$macro$3) && (fresh$macro$306 < (fresh$macro$305)) && (input$macro$1(inputpos$macro$2) == (Hw.this.comma.charAt(fresh$macro$306))))
                                                                                                                {
                                                                                                                  {
                                                                                                                    fresh$macro$306 = fresh$macro$306.$plus(1);
                                                                                                                    inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                                                                                  };
                                                                                                                  while$95()
                                                                                                                }
                                                                                                              else
                                                                                                                ()
                                                                                                            };
                                                                                                            if (fresh$macro$306 == (fresh$macro$305))
                                                                                                              {
                                                                                                                success$macro$5 = true;
                                                                                                                fresh$macro$308 = Hw.this.comma
                                                                                                              }
                                                                                                            else
                                                                                                              {
                                                                                                                success$macro$5 = false;
                                                                                                                ();
                                                                                                                inputpos$macro$2 = fresh$macro$307
                                                                                                              }
                                                                                                          }
                                                                                                        };
                                                                                                        if (success$macro$5.unary_$bang)
                                                                                                          {
                                                                                                            fresh$macro$300 = false;
                                                                                                            inputpos$macro$2 = fresh$macro$303
                                                                                                          }
                                                                                                        else
                                                                                                          ()
                                                                                                      }
                                                                                                    }
                                                                                                  }
                                                                                                else
                                                                                                  {
                                                                                                    fresh$macro$300 = false;
                                                                                                    inputpos$macro$2 = fresh$macro$309
                                                                                                  }
                                                                                              }
                                                                                            };
                                                                                            while$97()
                                                                                          }
                                                                                        else
                                                                                          ()
                                                                                      };
                                                                                      {
                                                                                        fresh$macro$302 = fresh$macro$301.toList;
                                                                                        success$macro$5 = true
                                                                                      }
                                                                                    }
                                                                                  else
                                                                                    ()
                                                                                };
                                                                                if (success$macro$5)
                                                                                  {
                                                                                    val fresh$macro$315 = inputpos$macro$2;
                                                                                    {
                                                                                      var fresh$macro$314 = 0;
                                                                                      val fresh$macro$313 = Hw.this.closeSBracket.length;
                                                                                      while$99(){
                                                                                        if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                                                          {
                                                                                            inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                                            while$99()
                                                                                          }
                                                                                        else
                                                                                          ()
                                                                                      };
                                                                                      while$98(){
                                                                                        if (inputpos$macro$2 < (inputsize$macro$3) && (fresh$macro$314 < (fresh$macro$313)) && (input$macro$1(inputpos$macro$2) == (Hw.this.closeSBracket.charAt(fresh$macro$314))))
                                                                                          {
                                                                                            {
                                                                                              fresh$macro$314 = fresh$macro$314.$plus(1);
                                                                                              inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                                                            };
                                                                                            while$98()
                                                                                          }
                                                                                        else
                                                                                          ()
                                                                                      };
                                                                                      if (fresh$macro$314 == (fresh$macro$313))
                                                                                        {
                                                                                          success$macro$5 = true;
                                                                                          ()
                                                                                        }
                                                                                      else
                                                                                        {
                                                                                          success$macro$5 = false;
                                                                                          ();
                                                                                          inputpos$macro$2 = fresh$macro$315
                                                                                        }
                                                                                    }
                                                                                  }
                                                                                else
                                                                                  ()
                                                                              };
                                                                              fresh$macro$316 = fresh$macro$302
                                                                            };
                                                                            if (success$macro$5)
                                                                              fresh$macro$296 = fresh$macro$316
                                                                            else
                                                                              ()
                                                                          }
                                                                        else
                                                                          fresh$macro$296 = fresh$macro$299
                                                                      }
                                                                    };
                                                                    if (success$macro$5.unary_$bang)
                                                                      {
                                                                        inputpos$macro$2 = fresh$macro$295;
                                                                        {
                                                                          val fresh$macro$318 = inputpos$macro$2;
                                                                          {
                                                                            while$101(){
                                                                              if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                                                {
                                                                                  inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                                  while$101()
                                                                                }
                                                                              else
                                                                                ()
                                                                            };
                                                                            val fresh$macro$317 = inputpos$macro$2;
                                                                            if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == ('\"')))
                                                                              {
                                                                                inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                                while$100(){
                                                                                  if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2).$bang$eq('\"')))
                                                                                    {
                                                                                      {
                                                                                        if (input$macro$1(inputpos$macro$2) == ('\\'))
                                                                                          inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                                                        else
                                                                                          ();
                                                                                        inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                                                      };
                                                                                      while$100()
                                                                                    }
                                                                                  else
                                                                                    ()
                                                                                };
                                                                                if (inputpos$macro$2 < (inputsize$macro$3))
                                                                                  {
                                                                                    success$macro$5 = true;
                                                                                    inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                                    fresh$macro$319 = new CharArrayStruct(input$macro$1, fresh$macro$317, inputpos$macro$2)
                                                                                  }
                                                                                else
                                                                                  {
                                                                                    success$macro$5 = false;
                                                                                    ();
                                                                                    inputpos$macro$2 = fresh$macro$318
                                                                                  }
                                                                              }
                                                                            else
                                                                              {
                                                                                success$macro$5 = false;
                                                                                ();
                                                                                inputpos$macro$2 = fresh$macro$318
                                                                              }
                                                                          }
                                                                        };
                                                                        if (success$macro$5)
                                                                          fresh$macro$294 = fresh$macro$319
                                                                        else
                                                                          ()
                                                                      }
                                                                    else
                                                                      fresh$macro$294 = fresh$macro$296
                                                                  }
                                                                };
                                                                if (success$macro$5.unary_$bang)
                                                                  {
                                                                    inputpos$macro$2 = fresh$macro$293;
                                                                    {
                                                                      val fresh$macro$323 = inputpos$macro$2;
                                                                      {
                                                                        while$105(){
                                                                          if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                                            {
                                                                              inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                              while$105()
                                                                            }
                                                                          else
                                                                            ()
                                                                        };
                                                                        var fresh$macro$320 = false;
                                                                        val fresh$macro$321 = inputpos$macro$2;
                                                                        success$macro$5 = false;
                                                                        if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == ('-')))
                                                                          inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                                        else
                                                                          ();
                                                                        if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2).$greater$eq('0')) && (input$macro$1(inputpos$macro$2) < $eq('9')))
                                                                          {
                                                                            inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                            while$103(){
                                                                              if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2).$greater$eq('0')) && (input$macro$1(inputpos$macro$2) < $eq('9')))
                                                                                {
                                                                                  inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                                  while$103()
                                                                                }
                                                                              else
                                                                                ()
                                                                            };
                                                                            if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == ('.')))
                                                                              {
                                                                                inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                                while$102(){
                                                                                  if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2).$greater$eq('0')) && (input$macro$1(inputpos$macro$2) < $eq('9')))
                                                                                    {
                                                                                      inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                                      while$102()
                                                                                    }
                                                                                  else
                                                                                    ()
                                                                                }
                                                                              }
                                                                            else
                                                                              ();
                                                                            success$macro$5 = true;
                                                                            fresh$macro$322 = new CharArrayStruct(input$macro$1, fresh$macro$321, inputpos$macro$2)
                                                                          }
                                                                        else
                                                                          if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == ('.')))
                                                                            {
                                                                              inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                              if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2).$greater$eq('0')) && (input$macro$1(inputpos$macro$2) < $eq('9')))
                                                                                {
                                                                                  inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                                  while$104(){
                                                                                    if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2).$greater$eq('0')) && (input$macro$1(inputpos$macro$2) < $eq('9')))
                                                                                      {
                                                                                        inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                                        while$104()
                                                                                      }
                                                                                    else
                                                                                      ()
                                                                                  };
                                                                                  success$macro$5 = true;
                                                                                  fresh$macro$322 = new CharArrayStruct(input$macro$1, fresh$macro$321, inputpos$macro$2)
                                                                                }
                                                                              else
                                                                                ()
                                                                            }
                                                                          else
                                                                            ()
                                                                      }
                                                                    };
                                                                    if (success$macro$5)
                                                                      fresh$macro$292 = fresh$macro$322
                                                                    else
                                                                      ()
                                                                  }
                                                                else
                                                                  fresh$macro$292 = fresh$macro$294
                                                              }
                                                            };
                                                            if (success$macro$5.unary_$bang)
                                                              {
                                                                inputpos$macro$2 = fresh$macro$291;
                                                                {
                                                                  val fresh$macro$327 = inputpos$macro$2;
                                                                  {
                                                                    var fresh$macro$326 = 0;
                                                                    val fresh$macro$325 = Hw.this.nullValue.length;
                                                                    while$107(){
                                                                      if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                                        {
                                                                          inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                          while$107()
                                                                        }
                                                                      else
                                                                        ()
                                                                    };
                                                                    while$106(){
                                                                      if (inputpos$macro$2 < (inputsize$macro$3) && (fresh$macro$326 < (fresh$macro$325)) && (input$macro$1(inputpos$macro$2) == (Hw.this.nullValue.charAt(fresh$macro$326))))
                                                                        {
                                                                          {
                                                                            fresh$macro$326 = fresh$macro$326.$plus(1);
                                                                            inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                                          };
                                                                          while$106()
                                                                        }
                                                                      else
                                                                        ()
                                                                    };
                                                                    if (fresh$macro$326 == (fresh$macro$325))
                                                                      {
                                                                        success$macro$5 = true;
                                                                        fresh$macro$328 = Hw.this.nullValue
                                                                      }
                                                                    else
                                                                      {
                                                                        success$macro$5 = false;
                                                                        ();
                                                                        inputpos$macro$2 = fresh$macro$327
                                                                      }
                                                                  }
                                                                };
                                                                if (success$macro$5)
                                                                  fresh$macro$290 = fresh$macro$328
                                                                else
                                                                  ()
                                                              }
                                                            else
                                                              fresh$macro$290 = fresh$macro$292
                                                          }
                                                        };
                                                        if (success$macro$5.unary_$bang)
                                                          {
                                                            inputpos$macro$2 = fresh$macro$289;
                                                            {
                                                              val fresh$macro$332 = inputpos$macro$2;
                                                              {
                                                                var fresh$macro$331 = 0;
                                                                val fresh$macro$330 = Hw.this.trueValue.length;
                                                                while$109(){
                                                                  if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                                    {
                                                                      inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                      while$109()
                                                                    }
                                                                  else
                                                                    ()
                                                                };
                                                                while$108(){
                                                                  if (inputpos$macro$2 < (inputsize$macro$3) && (fresh$macro$331 < (fresh$macro$330)) && (input$macro$1(inputpos$macro$2) == (Hw.this.trueValue.charAt(fresh$macro$331))))
                                                                    {
                                                                      {
                                                                        fresh$macro$331 = fresh$macro$331.$plus(1);
                                                                        inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                                      };
                                                                      while$108()
                                                                    }
                                                                  else
                                                                    ()
                                                                };
                                                                if (fresh$macro$331 == (fresh$macro$330))
                                                                  {
                                                                    success$macro$5 = true;
                                                                    fresh$macro$333 = Hw.this.trueValue
                                                                  }
                                                                else
                                                                  {
                                                                    success$macro$5 = false;
                                                                    ();
                                                                    inputpos$macro$2 = fresh$macro$332
                                                                  }
                                                              }
                                                            };
                                                            if (success$macro$5)
                                                              fresh$macro$288 = fresh$macro$333
                                                            else
                                                              ()
                                                          }
                                                        else
                                                          fresh$macro$288 = fresh$macro$290
                                                      }
                                                    };
                                                    if (success$macro$5.unary_$bang)
                                                      {
                                                        inputpos$macro$2 = fresh$macro$287;
                                                        {
                                                          val fresh$macro$337 = inputpos$macro$2;
                                                          {
                                                            var fresh$macro$336 = 0;
                                                            val fresh$macro$335 = Hw.this.falseValue.length;
                                                            while$111(){
                                                              if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                                                {
                                                                  inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                                  while$111()
                                                                }
                                                              else
                                                                ()
                                                            };
                                                            while$110(){
                                                              if (inputpos$macro$2 < (inputsize$macro$3) && (fresh$macro$336 < (fresh$macro$335)) && (input$macro$1(inputpos$macro$2) == (Hw.this.falseValue.charAt(fresh$macro$336))))
                                                                {
                                                                  {
                                                                    fresh$macro$336 = fresh$macro$336.$plus(1);
                                                                    inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                                  };
                                                                  while$110()
                                                                }
                                                              else
                                                                ()
                                                            };
                                                            if (fresh$macro$336 == (fresh$macro$335))
                                                              {
                                                                success$macro$5 = true;
                                                                fresh$macro$338 = Hw.this.falseValue
                                                              }
                                                            else
                                                              {
                                                                success$macro$5 = false;
                                                                ();
                                                                inputpos$macro$2 = fresh$macro$337
                                                              }
                                                          }
                                                        };
                                                        if (success$macro$5)
                                                          fresh$macro$286 = fresh$macro$338
                                                        else
                                                          ()
                                                      }
                                                    else
                                                      fresh$macro$286 = fresh$macro$288
                                                  }
                                                }
                                              else
                                                ()
                                            };
                                            fresh$macro$339 = fresh$macro$286
                                          }
                                        else
                                          ()
                                      };
                                      fresh$macro$340 = scala.Tuple2(fresh$macro$279, fresh$macro$339)
                                    }
                                  else
                                    ()
                                };
                                fresh$macro$341 = fresh$macro$340
                              };
                              if (success$macro$5)
                                {
                                  fresh$macro$268.$plus$eq(fresh$macro$341);
                                  {
                                    val fresh$macro$270 = inputpos$macro$2;
                                    {
                                      {
                                        val fresh$macro$274 = inputpos$macro$2;
                                        {
                                          var fresh$macro$273 = 0;
                                          val fresh$macro$272 = Hw.this.comma.length;
                                          while$89(){
                                            if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                                              {
                                                inputpos$macro$2 = inputpos$macro$2.$plus(1);
                                                while$89()
                                              }
                                            else
                                              ()
                                          };
                                          while$88(){
                                            if (inputpos$macro$2 < (inputsize$macro$3) && (fresh$macro$273 < (fresh$macro$272)) && (input$macro$1(inputpos$macro$2) == (Hw.this.comma.charAt(fresh$macro$273))))
                                              {
                                                {
                                                  fresh$macro$273 = fresh$macro$273.$plus(1);
                                                  inputpos$macro$2 = inputpos$macro$2.$plus(1)
                                                };
                                                while$88()
                                              }
                                            else
                                              ()
                                          };
                                          if (fresh$macro$273 == (fresh$macro$272))
                                            {
                                              success$macro$5 = true;
                                              fresh$macro$275 = Hw.this.comma
                                            }
                                          else
                                            {
                                              success$macro$5 = false;
                                              ();
                                              inputpos$macro$2 = fresh$macro$274
                                            }
                                        }
                                      };
                                      if (success$macro$5.unary_$bang)
                                        {
                                          fresh$macro$267 = false;
                                          inputpos$macro$2 = fresh$macro$270
                                        }
                                      else
                                        ()
                                    }
                                  }
                                }
                              else
                                {
                                  fresh$macro$267 = false;
                                  inputpos$macro$2 = fresh$macro$276
                                }
                            }
                          };
                          while$112()
                        }
                      else
                        ()
                    };
                    {
                      fresh$macro$269 = fresh$macro$268.toList;
                      success$macro$5 = true
                    }
                  }
                else
                  ()
              };
              if (success$macro$5)
                {
                  val fresh$macro$345 = inputpos$macro$2;
                  {
                    var fresh$macro$344 = 0;
                    val fresh$macro$343 = Hw.this.closeBracket.length;
                    // skip whitespace
                    while$114(){
                      if (inputpos$macro$2 < (inputsize$macro$3) && (input$macro$1(inputpos$macro$2) == (' ') || (input$macro$1(inputpos$macro$2) == ('\t')) || (input$macro$1(inputpos$macro$2) == ('\n')) || (input$macro$1(inputpos$macro$2) == ('\r'))))
                        {
                          inputpos$macro$2 = inputpos$macro$2.$plus(1);
                          while$114()
                        }
                      else
                        ()
                    };
                    while$113(){
                      if (inputpos$macro$2 < (inputsize$macro$3) && (fresh$macro$344 < (fresh$macro$343)) && (input$macro$1(inputpos$macro$2) == (Hw.this.closeBracket.charAt(fresh$macro$344))))
                        {
                          {
                            fresh$macro$344 = fresh$macro$344.$plus(1);
                            inputpos$macro$2 = inputpos$macro$2.$plus(1)
                          };
                          while$113()
                        }
                      else
                        ()
                    };
                    if (fresh$macro$344 == (fresh$macro$343))
                      {
                        success$macro$5 = true;
                        ()
                      }
                    else
                      {
                        success$macro$5 = false;
                        ();
                        inputpos$macro$2 = fresh$macro$345
                      }
                  }
                }
              else
                ()
            };
            ParseResult(success$macro$5, error, if (success$macro$5)
              fresh$macro$269
            else
              null, inputpos$macro$2)
          }
        }
      }
    }
  };
  val fresh$macro$347 = 0;
  new fresh$macro$346()
}

...

[success] Total time: 2 s, completed Mar 14, 2015 10:58:07 PM
>
